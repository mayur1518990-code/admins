{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/doc/apps/admin-app/src/components/AdminSidebar.tsx"],"sourcesContent":["\"use client\";\r\n\r\nexport function Sidebar() {\r\n  const pathname = typeof window !== 'undefined' ? window.location.pathname : \"\";\r\n  const userRole: 'admin' | 'agent' | null = typeof document !== 'undefined'\r\n    ? (document.cookie.includes('admin-token') ? 'admin' : document.cookie.includes('agent-token') ? 'agent' : null)\r\n    : null;\r\n\r\n  const isActive = (path: string) => pathname === path;\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      if (userRole === 'admin') {\r\n        await fetch('/api/admin/logout', { method: 'POST' });\r\n      } else if (userRole === 'agent') {\r\n        await fetch('/api/agent/logout', { method: 'POST' });\r\n      }\r\n    } catch (error) {\r\n      console.error('Logout API error:', error);\r\n    } finally {\r\n      document.cookie = 'admin-token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\r\n      document.cookie = 'agent-token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\r\n      window.location.href = '/';\r\n    }\r\n  };\r\n\r\n  const adminNavigation = [\r\n    { name: \"Dashboard\", href: \"/\", icon: \"📊\" },\r\n    { name: \"User Management\", href: \"/admin/users\", icon: \"👥\" },\r\n    { name: \"Agent Management\", href: \"/admin/agents\", icon: \"🤖\" },\r\n    { name: \"File Management\", href: \"/admin/files\", icon: \"📁\" },\r\n    { name: \"Assignment\", href: \"/admin/assign\", icon: \"🔗\" },\r\n    { name: \"Transactions\", href: \"/admin/transactions\", icon: \"💳\" },\r\n    { name: \"Audit Logs\", href: \"/admin/logs\", icon: \"📋\" },\r\n    { name: \"System Settings\", href: \"/admin/settings\", icon: \"⚙️\" },\r\n  ];\r\n\r\n  const agentNavigation = [\r\n    { name: \"Dashboard\", href: \"/agent\", icon: \"📊\" },\r\n    { name: \"My Files\", href: \"/agent/files\", icon: \"📁\" },\r\n    { name: \"Reply\", href: \"/agent/reply\", icon: \"💬\" },\r\n  ];\r\n\r\n  const navigation = userRole === 'admin' ? adminNavigation : agentNavigation;\r\n  const portalTitle = userRole === 'admin' ? 'Admin Portal' : 'Agent Portal';\r\n  const portalSubtitle = userRole === 'admin' ? 'Document Management System' : 'File Processing System';\r\n\r\n  if (!userRole) {\r\n    return (\r\n      <div className=\"w-64 bg-white shadow-sm border-r h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"text-gray-400 text-4xl mb-4\">🔒</div>\r\n          <p className=\"text-gray-600\">Please log in</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-64 bg-white shadow-sm border-r h-screen\">\r\n      <div className=\"p-6\">\r\n        <h2 className=\"text-xl font-bold text-gray-900\">{portalTitle}</h2>\r\n        <p className=\"text-sm text-gray-500 mt-1\">{portalSubtitle}</p>\r\n        <div className=\"mt-2\">\r\n          <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\r\n            userRole === 'admin' \r\n              ? 'bg-red-100 text-red-800' \r\n              : 'bg-blue-100 text-blue-800'\r\n          }`}>\r\n            {userRole === 'admin' ? '👑 Admin' : '🤖 Agent'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      \r\n      <nav className=\"mt-6\">\r\n        <div className=\"px-6 py-2\">\r\n          <h3 className=\"text-xs font-semibold text-gray-500 uppercase tracking-wider\">\r\n            {userRole === 'admin' ? 'Management' : 'Work'}\r\n          </h3>\r\n        </div>\r\n        \r\n        <div className=\"mt-2\">\r\n          {navigation.map((item) => (\r\n            <a\r\n              key={item.name}\r\n              href={item.href}\r\n              className={`flex items-center px-6 py-3 text-sm font-medium transition-colors ${\r\n                isActive(item.href) \r\n                  ? \"bg-blue-50 text-blue-700 border-r-2 border-blue-700\" \r\n                  : \"text-gray-700 hover:bg-gray-50\"\r\n              }`}\r\n            >\r\n              <span className=\"text-lg mr-3\">{item.icon}</span>\r\n              {item.name}\r\n            </a>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Logout Button */}\r\n        <div className=\"mt-8 px-6\">\r\n          <button\r\n            onClick={handleLogout}\r\n            className=\"w-full flex items-center px-4 py-2 text-sm font-medium text-red-700 bg-red-50 rounded-lg hover:bg-red-100 transition-colors\"\r\n          >\r\n            <span className=\"text-lg mr-3\">🚪</span>\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"],"names":[],"mappings":";;;;;AAAA;;AAEO,SAAS;IACd,MAAM,WAAW,sCAAgC,0BAA2B;IAC5E,MAAM,WAAqC,OAAO,aAAa,cAC1D,SAAS,MAAM,CAAC,QAAQ,CAAC,iBAAiB,UAAU,SAAS,MAAM,CAAC,QAAQ,CAAC,iBAAiB,UAAU,OACzG;IAEJ,MAAM,WAAW,CAAC,OAAiB,aAAa;IAEhD,MAAM,eAAe;QACnB,IAAI;YACF,IAAI,aAAa,SAAS;gBACxB,MAAM,MAAM,qBAAqB;oBAAE,QAAQ;gBAAO;YACpD,OAAO,IAAI,aAAa,SAAS;gBAC/B,MAAM,MAAM,qBAAqB;oBAAE,QAAQ;gBAAO;YACpD;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,qBAAqB;QACrC,SAAU;YACR,SAAS,MAAM,GAAG;YAClB,SAAS,MAAM,GAAG;YAClB,OAAO,QAAQ,CAAC,IAAI,GAAG;QACzB;IACF;IAEA,MAAM,kBAAkB;QACtB;YAAE,MAAM;YAAa,MAAM;YAAK,MAAM;QAAK;QAC3C;YAAE,MAAM;YAAmB,MAAM;YAAgB,MAAM;QAAK;QAC5D;YAAE,MAAM;YAAoB,MAAM;YAAiB,MAAM;QAAK;QAC9D;YAAE,MAAM;YAAmB,MAAM;YAAgB,MAAM;QAAK;QAC5D;YAAE,MAAM;YAAc,MAAM;YAAiB,MAAM;QAAK;QACxD;YAAE,MAAM;YAAgB,MAAM;YAAuB,MAAM;QAAK;QAChE;YAAE,MAAM;YAAc,MAAM;YAAe,MAAM;QAAK;QACtD;YAAE,MAAM;YAAmB,MAAM;YAAmB,MAAM;QAAK;KAChE;IAED,MAAM,kBAAkB;QACtB;YAAE,MAAM;YAAa,MAAM;YAAU,MAAM;QAAK;QAChD;YAAE,MAAM;YAAY,MAAM;YAAgB,MAAM;QAAK;QACrD;YAAE,MAAM;YAAS,MAAM;YAAgB,MAAM;QAAK;KACnD;IAED,MAAM,aAAa,aAAa,UAAU,kBAAkB;IAC5D,MAAM,cAAc,aAAa,UAAU,iBAAiB;IAC5D,MAAM,iBAAiB,aAAa,UAAU,+BAA+B;IAE7E,IAAI,CAAC,UAAU;QACb,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCAA8B;;;;;;kCAC7C,8OAAC;wBAAE,WAAU;kCAAgB;;;;;;;;;;;;;;;;;IAIrC;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAmC;;;;;;kCACjD,8OAAC;wBAAE,WAAU;kCAA8B;;;;;;kCAC3C,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAK,WAAW,CAAC,wEAAwE,EACxF,aAAa,UACT,4BACA,6BACJ;sCACC,aAAa,UAAU,aAAa;;;;;;;;;;;;;;;;;0BAK3C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAG,WAAU;sCACX,aAAa,UAAU,eAAe;;;;;;;;;;;kCAI3C,8OAAC;wBAAI,WAAU;kCACZ,WAAW,GAAG,CAAC,CAAC,qBACf,8OAAC;gCAEC,MAAM,KAAK,IAAI;gCACf,WAAW,CAAC,kEAAkE,EAC5E,SAAS,KAAK,IAAI,IACd,wDACA,kCACJ;;kDAEF,8OAAC;wCAAK,WAAU;kDAAgB,KAAK,IAAI;;;;;;oCACxC,KAAK,IAAI;;+BATL,KAAK,IAAI;;;;;;;;;;kCAepB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BACC,SAAS;4BACT,WAAU;;8CAEV,8OAAC;oCAAK,WAAU;8CAAe;;;;;;gCAAS;;;;;;;;;;;;;;;;;;;;;;;;AAOpD","debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/doc/apps/admin-app/src/app/admin/users/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { Sidebar } from \"@/components/AdminSidebar\";\nimport { useState, useEffect } from \"react\";\n\n// Utility function to format dates consistently\nconst formatDate = (date: string | Date) => {\n  const d = new Date(date);\n  const year = d.getFullYear();\n  const month = String(d.getMonth() + 1).padStart(2, '0');\n  const day = String(d.getDate()).padStart(2, '0');\n  \n  return `${year}-${month}-${day}`;\n};\n\ninterface User {\n  id: string;\n  email: string;\n  name: string;\n  role: string;\n  isActive: boolean;\n  createdAt: string;\n  lastLoginAt?: string;\n  phone?: string;\n}\n\ninterface UserFormData {\n  name: string;\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  phone: string;\n  role: \"user\" | \"agent\" | \"admin\";\n}\n\nexport default function UsersPage() {\n  const [users, setUsers] = useState<User[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [editingUser, setEditingUser] = useState<User | null>(null);\n  const [resettingUser, setResettingUser] = useState<User | null>(null);\n  const [filter, setFilter] = useState<\"all\" | \"active\" | \"inactive\">(\"all\");\n  const [roleFilter, setRoleFilter] = useState<\"all\" | \"user\" | \"agent\" | \"admin\">(\"all\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  \n  const [formData, setFormData] = useState<UserFormData>({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    phone: \"\",\n    role: \"user\"\n  });\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  // Populate form data when editing a user\n  useEffect(() => {\n    if (editingUser) {\n      setFormData({\n        name: editingUser.name || \"\",\n        email: editingUser.email || \"\",\n        password: \"\", // Don't populate password for security\n        phone: editingUser.phone || \"\",\n        role: editingUser.role || \"user\"\n      });\n    }\n  }, [editingUser]);\n\n  const loadUsers = async () => {\n    try {\n      setIsLoading(true);\n      const response = await fetch('/api/admin/users');\n      const result = await response.json();\n      \n      if (!result.success) {\n        throw new Error(result.message || 'Failed to load users');\n      }\n      \n      setUsers(result.users);\n    } catch (error: any) {\n      console.error('Error loading users:', error);\n      setError(error.message || 'Failed to load users');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleAddUser = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      console.log('Form data being sent:', formData);\n      const response = await fetch('/api/admin/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      const result = await response.json();\n      \n      if (!result.success) {\n        throw new Error(result.message || 'Failed to create user');\n      }\n      \n      setShowAddModal(false);\n      setFormData({ name: \"\", email: \"\", password: \"\", phone: \"\", role: \"user\" });\n      loadUsers();\n    } catch (error: any) {\n      console.error('Error creating user:', error);\n      setError(error.message || 'Failed to create user');\n    }\n  };\n\n  const handleUpdateUser = async (userId: string, updates: Partial<User>) => {\n    console.log('handleUpdateUser called with:', { userId, updates });\n    try {\n      setError(\"\");\n      setSuccess(\"\");\n      \n      const response = await fetch('/api/admin/users', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          userId,\n          ...updates\n        }),\n      });\n\n      console.log('Update response status:', response.status);\n      const result = await response.json();\n      console.log('Update response result:', result);\n      \n      if (!result.success) {\n        throw new Error(result.message || 'Failed to update user');\n      }\n      \n      setSuccess('User updated successfully');\n      setTimeout(() => setSuccess(''), 5000);\n      loadUsers();\n    } catch (error: any) {\n      console.error('Error updating user:', error);\n      setError(error.message || 'Failed to update user');\n    }\n  };\n\n  const handleUpdatePassword = async (userId: string) => {\n    if (!resettingUser) return;\n\n    // Validate passwords match\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n\n    // Validate password length\n    if (formData.password.length < 6) {\n      setError('Password must be at least 6 characters long');\n      return;\n    }\n\n    try {\n      setError(\"\");\n      setSuccess(\"\");\n      \n      const response = await fetch('/api/admin/users/update-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ \n          userId: resettingUser.id,\n          newPassword: formData.password\n        }),\n      });\n\n      console.log('Update password response status:', response.status);\n      const result = await response.json();\n      console.log('Update password response result:', result);\n      \n      if (!result.success) {\n        throw new Error(result.message || 'Failed to update password');\n      }\n      \n      setSuccess('Password updated successfully!');\n      setTimeout(() => setSuccess(''), 5000);\n      setResettingUser(null);\n      setFormData({ ...formData, password: '', confirmPassword: '' });\n    } catch (error: any) {\n      console.error('Error updating password:', error);\n      setError(error.message || 'Failed to update password');\n    }\n  };\n\n  const handleDeleteUser = async (userId: string) => {\n    console.log('handleDeleteUser called with userId:', userId);\n    if (!confirm('Are you sure you want to DELETE this user permanently? This action cannot be undone.')) {\n      return;\n    }\n\n    try {\n      setError(\"\");\n      setSuccess(\"\");\n      \n      const response = await fetch(`/api/admin/users?userId=${userId}`, {\n        method: 'DELETE',\n      });\n\n      console.log('Delete response status:', response.status);\n      const result = await response.json();\n      console.log('Delete response result:', result);\n      \n      if (!result.success) {\n        throw new Error(result.message || 'Failed to delete user');\n      }\n      \n      setSuccess('User deleted successfully');\n      setTimeout(() => setSuccess(''), 5000);\n      loadUsers();\n    } catch (error: any) {\n      console.error('Error deleting user:', error);\n      setError(error.message || 'Failed to delete user');\n    }\n  };\n\n  const filteredUsers = users.filter(user => {\n    const matchesFilter = filter === \"all\" || \n      (filter === \"active\" && user.isActive) || \n      (filter === \"inactive\" && !user.isActive);\n    \n    const matchesRole = roleFilter === \"all\" || user.role === roleFilter;\n    \n    const matchesSearch = user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      user.email.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    return matchesFilter && matchesRole && matchesSearch;\n  });\n\n  const getRoleColor = (role: string) => {\n    switch (role) {\n      case 'admin':\n        return 'bg-red-100 text-red-800';\n      case 'agent':\n        return 'bg-blue-100 text-blue-800';\n      case 'user':\n        return 'bg-green-100 text-green-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex\">\n        <Sidebar />\n        <main className=\"flex-1 p-6\">\n          <div className=\"max-w-7xl mx-auto\">\n            <div className=\"animate-pulse\">\n              <div className=\"h-8 bg-gray-200 rounded w-48 mb-6\"></div>\n              <div className=\"bg-white rounded-lg shadow-md p-6\">\n                <div className=\"space-y-4\">\n                  {[1, 2, 3].map((i) => (\n                    <div key={i} className=\"h-16 bg-gray-200 rounded\"></div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex\">\n      <Sidebar />\n      <main className=\"flex-1 p-6\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <h1 className=\"text-3xl font-bold text-gray-900\">\n              User Management\n            </h1>\n            <button\n              onClick={() => setShowAddModal(true)}\n              className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              Add New User\n            </button>\n          </div>\n\n          {error && (\n            <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\n              <div className=\"flex items-center\">\n                <svg className=\"w-5 h-5 text-red-400 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                <span className=\"text-red-800\">{error}</span>\n              </div>\n            </div>\n          )}\n\n          {success && (\n            <div className=\"bg-green-50 border border-green-200 rounded-lg p-4 mb-6\">\n              <div className=\"flex items-center\">\n                <svg className=\"w-5 h-5 text-green-400 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                </svg>\n                <span className=\"text-green-800\">{success}</span>\n              </div>\n            </div>\n          )}\n\n          {/* Filters and Search */}\n          <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n            <div className=\"flex flex-col lg:flex-row gap-4\">\n              <div className=\"flex flex-wrap gap-2\">\n                {[\n                  { key: \"all\", label: \"All Users\" },\n                  { key: \"active\", label: \"Active\" },\n                  { key: \"inactive\", label: \"Inactive\" },\n                ].map((filterOption) => (\n                  <button\n                    key={filterOption.key}\n                    onClick={() => setFilter(filterOption.key as any)}\n                    className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n                      filter === filterOption.key\n                        ? \"bg-blue-100 text-blue-700\"\n                        : \"text-gray-600 hover:text-gray-900 hover:bg-gray-100\"\n                    }`}\n                  >\n                    {filterOption.label}\n                  </button>\n                ))}\n              </div>\n              \n              <div className=\"flex flex-wrap gap-2\">\n                {[\n                  { key: \"all\", label: \"All Roles\" },\n                  { key: \"user\", label: \"Users\" },\n                  { key: \"agent\", label: \"Agents\" },\n                  { key: \"admin\", label: \"Admins\" },\n                ].map((roleOption) => (\n                  <button\n                    key={roleOption.key}\n                    onClick={() => setRoleFilter(roleOption.key as any)}\n                    className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n                      roleFilter === roleOption.key\n                        ? \"bg-purple-100 text-purple-700\"\n                        : \"text-gray-600 hover:text-gray-900 hover:bg-gray-100\"\n                    }`}\n                  >\n                    {roleOption.label}\n                  </button>\n                ))}\n              </div>\n              \n              <div className=\"flex-1\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Search users...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Users List */}\n          <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      User\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Role\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Contact\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Activity\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Status\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Actions\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {filteredUsers.map((user) => (\n                    <tr key={user.id} className=\"hover:bg-gray-50\">\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"flex items-center\">\n                          <div className=\"flex-shrink-0 h-10 w-10\">\n                            <div className=\"h-10 w-10 rounded-full bg-gray-500 flex items-center justify-center\">\n                              <span className=\"text-white font-medium\">\n                                {user.name.charAt(0).toUpperCase()}\n                              </span>\n                            </div>\n                          </div>\n                          <div className=\"ml-4\">\n                            <div className=\"text-sm font-medium text-gray-900\">\n                              {user.name}\n                            </div>\n                            <div className=\"text-sm text-gray-500\">\n                              {user.email}\n                            </div>\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getRoleColor(user.role)}`}>\n                          {user.role.charAt(0).toUpperCase() + user.role.slice(1)}\n                        </span>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm text-gray-900\">\n                          {user.phone || 'No phone'}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm text-gray-900\">\n                          Joined: {formatDate(user.createdAt)}\n                        </div>\n                        <div className=\"text-sm text-gray-500\">\n                          Last login: {user.lastLoginAt ? formatDate(user.lastLoginAt) : 'Never'}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                          user.isActive \n                            ? 'bg-green-100 text-green-800' \n                            : 'bg-red-100 text-red-800'\n                        }`}>\n                          {user.isActive ? 'Active' : 'Inactive'}\n                        </span>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                        <div className=\"flex flex-wrap gap-2\">\n                          <button\n                            onClick={() => setEditingUser(user)}\n                            className=\"text-blue-600 hover:text-blue-900\"\n                          >\n                            Edit\n                          </button>\n                          <button\n                            onClick={() => handleUpdateUser(user.id, { isActive: !user.isActive })}\n                            className={`${\n                              user.isActive \n                                ? 'text-red-600 hover:text-red-900' \n                                : 'text-green-600 hover:text-green-900'\n                            }`}\n                          >\n                            {user.isActive ? 'Block' : 'Unblock'}\n                          </button>\n                          <button\n                            onClick={() => setResettingUser(user)}\n                            className=\"text-yellow-600 hover:text-yellow-900\"\n                          >\n                            Update Password\n                          </button>\n                          <button\n                            onClick={() => handleDeleteUser(user.id)}\n                            className=\"text-red-600 hover:text-red-900\"\n                          >\n                            Delete\n                          </button>\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          {filteredUsers.length === 0 && (\n            <div className=\"bg-white rounded-lg shadow-md p-8 text-center\">\n              <svg className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\" />\n              </svg>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No users found</h3>\n              <p className=\"text-gray-500 mb-4\">\n                {searchTerm ? 'Try adjusting your search criteria' : 'Get started by adding your first user'}\n              </p>\n              <button\n                onClick={() => setShowAddModal(true)}\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\n              >\n                Add User\n              </button>\n            </div>\n          )}\n        </div>\n      </main>\n\n      {/* Add User Modal */}\n      {showAddModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Add New User</h2>\n            <form onSubmit={handleAddUser}>\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    required\n                    value={formData.name}\n                    onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Email\n                  </label>\n                  <input\n                    type=\"email\"\n                    required\n                    value={formData.email}\n                    onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Password\n                  </label>\n                  <input\n                    type=\"password\"\n                    required\n                    value={formData.password}\n                    onChange={(e) => setFormData({ ...formData, password: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Role\n                  </label>\n                  <select\n                    value={formData.role}\n                    onChange={(e) => setFormData({ ...formData, role: e.target.value as any })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"user\">User</option>\n                    <option value=\"agent\">Agent</option>\n                    <option value=\"admin\">Admin</option>\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Phone (Optional)\n                  </label>\n                  <input\n                    type=\"tel\"\n                    value={formData.phone}\n                    onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  />\n                </div>\n              </div>\n              <div className=\"flex justify-end space-x-3 mt-6\">\n                <button\n                  type=\"button\"\n                  onClick={() => setShowAddModal(false)}\n                  className=\"px-4 py-2 text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n                >\n                  Create User\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Edit User Modal */}\n      {editingUser && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Edit User</h2>\n            <form onSubmit={(e) => {\n              e.preventDefault();\n              handleUpdateUser(editingUser.id, {\n                name: formData.name,\n                email: formData.email,\n                role: formData.role,\n                phone: formData.phone\n              });\n              setEditingUser(null);\n              setFormData({ name: \"\", email: \"\", password: \"\", phone: \"\", role: \"user\" });\n            }}>\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    required\n                    value={formData.name}\n                    onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Email\n                  </label>\n                  <input\n                    type=\"email\"\n                    required\n                    value={formData.email}\n                    onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Role\n                  </label>\n                  <select\n                    value={formData.role}\n                    onChange={(e) => setFormData({ ...formData, role: e.target.value as any })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"user\">User</option>\n                    <option value=\"agent\">Agent</option>\n                    <option value=\"admin\">Admin</option>\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Phone (Optional)\n                  </label>\n                  <input\n                    type=\"tel\"\n                    value={formData.phone}\n                    onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  />\n                </div>\n              </div>\n              <div className=\"flex justify-end space-x-3 mt-6\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setEditingUser(null);\n                    setFormData({ name: \"\", email: \"\", password: \"\", phone: \"\", role: \"user\" });\n                  }}\n                  className=\"px-4 py-2 text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n                >\n                  Update User\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Update Password Modal */}\n      {resettingUser && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Update Password</h2>\n            <form onSubmit={(e) => {\n              e.preventDefault();\n              handleUpdatePassword(resettingUser.id);\n            }}>\n              <div className=\"space-y-4\">\n                <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                  <div className=\"flex\">\n                    <div className=\"flex-shrink-0\">\n                      <svg className=\"h-5 w-5 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                      </svg>\n                    </div>\n                    <div className=\"ml-3\">\n                      <h3 className=\"text-sm font-medium text-blue-800\">\n                        Update Password for {resettingUser.name}\n                      </h3>\n                      <div className=\"mt-2 text-sm text-blue-700\">\n                        <p>Enter a new password for this user. They will need to use this password for their next login.</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"text-sm font-medium text-gray-900 mb-2\">User Details:</h4>\n                  <div className=\"text-sm text-gray-600 space-y-1\">\n                    <p><strong>Name:</strong> {resettingUser.name}</p>\n                    <p><strong>Email:</strong> {resettingUser.email}</p>\n                    <p><strong>Role:</strong> {resettingUser.role}</p>\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    New Password\n                  </label>\n                  <input\n                    type=\"password\"\n                    value={formData.password}\n                    onChange={(e) => setFormData({ ...formData, password: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"Enter new password\"\n                    required\n                    minLength={6}\n                  />\n                  <p className=\"text-xs text-gray-500 mt-1\">Password must be at least 6 characters long</p>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Confirm New Password\n                  </label>\n                  <input\n                    type=\"password\"\n                    value={formData.confirmPassword || ''}\n                    onChange={(e) => setFormData({ ...formData, confirmPassword: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"Confirm new password\"\n                    required\n                    minLength={6}\n                  />\n                </div>\n              </div>\n              \n              <div className=\"flex justify-end space-x-3 mt-6\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setResettingUser(null);\n                    setFormData({ ...formData, password: '', confirmPassword: '' });\n                  }}\n                  className=\"px-4 py-2 text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n                >\n                  Update Password\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}