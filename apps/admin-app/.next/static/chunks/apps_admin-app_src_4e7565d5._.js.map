{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/hosting%20admin/apps/admin-app/src/lib/cache.ts"],"sourcesContent":["type CacheEntry<T> = { data: T; timestamp: number };\n\nconst memoryCache = new Map<string, CacheEntry<any>>();\n\nexport function getCached<T>(key: string): CacheEntry<T> | undefined {\n  return memoryCache.get(key);\n}\n\nexport function setCached<T>(key: string, data: T): void {\n  memoryCache.set(key, { data, timestamp: Date.now() });\n}\n\nexport function getCacheKey(parts: Array<string | number | boolean | null | undefined>): string {\n  return parts.filter((p) => p !== undefined && p !== null).join(\":\");\n}\n\nexport function isFresh(entry: CacheEntry<any> | undefined, ttlMs: number): boolean {\n  if (!entry) return false;\n  return Date.now() - entry.timestamp < ttlMs;\n}\n\nexport function deleteCached(key: string): void {\n  memoryCache.delete(key);\n}\n\n\n"],"names":[],"mappings":";;;;;;;;;;;;AAEA,MAAM,cAAc,IAAI;AAEjB,SAAS,UAAa,GAAW;IACtC,OAAO,YAAY,GAAG,CAAC;AACzB;AAEO,SAAS,UAAa,GAAW,EAAE,IAAO;IAC/C,YAAY,GAAG,CAAC,KAAK;QAAE;QAAM,WAAW,KAAK,GAAG;IAAG;AACrD;AAEO,SAAS,YAAY,KAA0D;IACpF,OAAO,MAAM,MAAM,CAAC,CAAC,IAAM,MAAM,aAAa,MAAM,MAAM,IAAI,CAAC;AACjE;AAEO,SAAS,QAAQ,KAAkC,EAAE,KAAa;IACvE,IAAI,CAAC,OAAO,OAAO;IACnB,OAAO,KAAK,GAAG,KAAK,MAAM,SAAS,GAAG;AACxC;AAEO,SAAS,aAAa,GAAW;IACtC,YAAY,MAAM,CAAC;AACrB","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/hosting%20admin/apps/admin-app/src/app/admin/agents/page.tsx"],"sourcesContent":["\"use client\";\n\nimport dynamic from \"next/dynamic\";\nconst Sidebar = dynamic(() => import(\"@/components/AdminSidebar\").then(m => m.Sidebar), { ssr: false });\nimport { useState, useEffect, useCallback, useRef, useMemo } from \"react\";\nimport { getCached, setCached, getCacheKey, isFresh, deleteCached } from \"@/lib/cache\";\n\n// Debounce hook for search optimization\nfunction useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n\n// Utility function to format dates consistently\nconst useFormatDate = () => useCallback((date: string | Date) => {\n  const d = new Date(date);\n  const year = d.getFullYear();\n  const month = String(d.getMonth() + 1).padStart(2, '0');\n  const day = String(d.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n}, []);\n\ninterface Agent {\n  id: string;\n  email: string;\n  name: string;\n  role: string;\n  isActive: boolean;\n  createdAt: string;\n  lastLoginAt?: string;\n  phone?: string;\n  stats: {\n    totalFiles: number;\n    completedFiles: number;\n    pendingFiles: number;\n  };\n}\n\ninterface AgentFormData {\n  name: string;\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  phone: string;\n}\n\nexport default function AgentsPage() {\n  const formatDate = useFormatDate();\n  const [agents, setAgents] = useState<Agent[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [editingAgent, setEditingAgent] = useState<Agent | null>(null);\n  const [resettingAgent, setResettingAgent] = useState<Agent | null>(null);\n  const [filter, setFilter] = useState<\"all\" | \"active\" | \"inactive\">(\"all\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const debouncedSearchTerm = useDebounce(searchTerm, 300); // Debounce search by 300ms\n  \n  const [formData, setFormData] = useState<AgentFormData>({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    phone: \"\"\n  });\n\n  useEffect(() => {\n    loadAgents();\n  }, []);\n\n  // Populate form data when editing an agent\n  useEffect(() => {\n    if (editingAgent) {\n      setFormData({\n        name: editingAgent.name || \"\",\n        email: editingAgent.email || \"\",\n        password: \"\", // Don't populate password for security\n        phone: editingAgent.phone || \"\"\n      });\n    }\n  }, [editingAgent]);\n\n  const isLoadingRef = useRef(false);\n  const loadAgents = useCallback(async (forceRefresh = false) => {\n    // Prevent duplicate requests\n    if (isLoadingRef.current) return;\n    isLoadingRef.current = true;\n    \n    try {\n      setIsLoading(true);\n      setError(\"\");\n      \n      const ttlMs = 5 * 60 * 1000; // 5 minutes cache\n      const cacheKey = getCacheKey(['admin-agents']);\n      \n      // Check cache first unless force refresh\n      if (!forceRefresh) {\n        const cached = getCached<{ agents: Agent[] }>(cacheKey);\n        if (isFresh(cached, ttlMs)) {\n          setAgents(cached!.data.agents || []);\n          return;\n        }\n      }\n\n      // OPTIMIZED: Longer timeout with retry logic\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 30000); // Increased to 30s\n      \n      const response = await fetch('/api/admin/agents?includeStats=true&limit=100', { \n        signal: controller.signal,\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      });\n      clearTimeout(timeoutId);\n      \n      // Validate response\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      \n      const contentType = response.headers.get('content-type');\n      if (!contentType || !contentType.includes('application/json')) {\n        throw new Error(`Expected JSON but got ${contentType}`);\n      }\n      \n      const result = await response.json();\n      \n      if (!result.success) {\n        throw new Error(result.message || result.error || 'Failed to load agents');\n      }\n      \n      // Update state with new data\n      const agentsData = result.agents || [];\n      setAgents(agentsData);\n      setCached(cacheKey, { agents: agentsData });\n      \n    } catch (error: any) {\n      console.error('Error loading agents:', error);\n      // Don't set empty array on abort - keep existing data\n      if (error.name !== 'AbortError') {\n        // Handle specific error types\n        if (error.message?.includes('Database connection failed')) {\n          setError('Database connection failed. Please try again.');\n        } else if (error.message?.includes('Request timed out')) {\n          setError('Request timed out. Please try again.');\n        } else {\n          setError(error.message || 'Failed to load agents');\n        }\n        // Only clear agents on non-timeout errors\n        if (!error.message?.includes('timeout') && !error.message?.includes('connection')) {\n          setAgents([]);\n        }\n      }\n    } finally {\n      setIsLoading(false);\n      isLoadingRef.current = false;\n    }\n  }, []); // Empty dependency array is correct - this should never change\n\n  const handleAddAgent = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Trim inputs\n    const trimmedData = {\n      name: formData.name.trim(),\n      email: formData.email.trim(),\n      password: formData.password,\n      phone: formData.phone.trim()\n    };\n    \n    // Frontend validation\n    if (!trimmedData.name || !trimmedData.email || !trimmedData.password) {\n      setError('Please fill in all required fields');\n      return;\n    }\n    \n    // Validate email format\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(trimmedData.email)) {\n      setError('Please enter a valid email address');\n      return;\n    }\n    \n    if (trimmedData.password.length < 6) {\n      setError('Password must be at least 6 characters long');\n      return;\n    }\n    \n    try {\n      setError(''); // Clear any previous errors\n      const response = await fetch('/api/admin/agents', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(trimmedData),\n      });\n\n      const result = await response.json();\n      \n      if (!result.success) {\n        throw new Error(result.message || result.error || 'Failed to create agent');\n      }\n      \n      setShowAddModal(false);\n      setFormData({ name: \"\", email: \"\", password: \"\", phone: \"\" });\n      setSuccess('Agent created successfully!');\n      setTimeout(() => setSuccess(''), 3000);\n      deleteCached(getCacheKey(['admin-agents']));\n      await loadAgents(true); // Force refresh after mutation\n    } catch (error: any) {\n      setError(error.message || 'Failed to create agent');\n      // Keep modal open so user can fix the error\n    }\n  };\n\n  const handleUpdateAgent = async (agentId: string, updates: Partial<Agent>) => {\n    try {\n      setError(\"\");\n      setSuccess(\"\");\n      // optimistic update\n      const prev = agents;\n      setAgents(prev.map(a => a.id === agentId ? { ...a, ...updates } as Agent : a));\n\n      const response = await fetch('/api/admin/agents', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          agentId,\n          ...updates\n        }),\n      });\n\n      const result = await response.json();\n      \n      if (!result.success) {\n        setAgents(prev); // revert\n        throw new Error(result.message || 'Failed to update agent');\n      }\n      \n      setSuccess('Agent updated successfully');\n      setTimeout(() => setSuccess(''), 3000);\n      deleteCached(getCacheKey(['admin-agents']));\n      await loadAgents(true); // Force refresh after mutation\n    } catch (error: any) {\n      setError(error.message || 'Failed to update agent');\n    }\n  };\n\n  const handleUpdatePassword = async (agentId: string) => {\n    if (!resettingAgent) return;\n\n    // Validate passwords match\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n\n    // Validate password length\n    if (formData.password.length < 6) {\n      setError('Password must be at least 6 characters long');\n      return;\n    }\n\n    try {\n      setError(\"\");\n      setSuccess(\"\");\n      \n      const response = await fetch('/api/admin/users/update-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ \n          userId: resettingAgent.id,\n          newPassword: formData.password\n        }),\n      });\n\n      const result = await response.json();\n      \n      if (!result.success) {\n        throw new Error(result.message || 'Failed to update password');\n      }\n      \n      setSuccess('Password updated successfully!');\n      setTimeout(() => setSuccess(''), 5000);\n      setResettingAgent(null);\n      setFormData({ ...formData, password: '', confirmPassword: '' });\n    } catch (error: any) {\n      console.error('Error updating password:', error);\n      setError(error.message || 'Failed to update password');\n    }\n  };\n\n  const handleDeleteAgent = async (agentId: string) => {\n    if (!confirm('Are you sure you want to DELETE this agent permanently? This action cannot be undone.')) {\n      return;\n    }\n\n    try {\n      setError(\"\");\n      setSuccess(\"\");\n      // optimistic remove\n      const prev = agents;\n      setAgents(prev.filter(a => a.id !== agentId));\n\n      const response = await fetch(`/api/admin/agents?agentId=${agentId}`, {\n        method: 'DELETE',\n      });\n\n      const result = await response.json();\n      \n      if (!result.success) {\n        setAgents(prev); // revert\n        throw new Error(result.message || 'Failed to delete agent');\n      }\n      \n      setSuccess('Agent deleted successfully');\n      setTimeout(() => setSuccess(''), 3000);\n      deleteCached(getCacheKey(['admin-agents']));\n      await loadAgents(true); // Force refresh after mutation\n    } catch (error: any) {\n      setError(error.message || 'Failed to delete agent');\n    }\n  };\n\n  const filteredAgents = useMemo(() => {\n    const search = debouncedSearchTerm.toLowerCase(); // Use debounced value\n    return (agents || []).filter(agent => {\n      const matchesFilter = filter === \"all\" || \n        (filter === \"active\" && agent.isActive) || \n        (filter === \"inactive\" && !agent.isActive);\n      const matchesSearch = !search ||\n        agent.name?.toLowerCase().includes(search) ||\n        agent.email?.toLowerCase().includes(search) ||\n        agent.phone?.toLowerCase().includes(search);\n      return matchesFilter && matchesSearch;\n    });\n  }, [agents, filter, debouncedSearchTerm]);\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex\">\n        <Sidebar />\n        <main className=\"flex-1 p-6\">\n          <div className=\"max-w-7xl mx-auto\">\n            <div className=\"animate-pulse\">\n              <div className=\"h-8 bg-gray-200 rounded w-48 mb-6\"></div>\n              <div className=\"bg-white rounded-lg shadow-md p-6\">\n                <div className=\"space-y-4\">\n                  {[1, 2, 3].map((i) => (\n                    <div key={i} className=\"h-16 bg-gray-200 rounded\"></div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex\">\n      <Sidebar />\n      <main className=\"flex-1 p-6\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <h1 className=\"text-3xl font-bold text-gray-900\">\n              Agent Management\n            </h1>\n            <button\n              onClick={() => setShowAddModal(true)}\n              className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              Add New Agent\n            </button>\n          </div>\n\n          {error && (\n            <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\n              <div className=\"flex items-center\">\n                <svg className=\"w-5 h-5 text-red-400 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                <span className=\"text-red-800\">{error}</span>\n              </div>\n            </div>\n          )}\n\n          {success && (\n            <div className=\"bg-green-50 border border-green-200 rounded-lg p-4 mb-6\">\n              <div className=\"flex items-center\">\n                <svg className=\"w-5 h-5 text-green-400 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                </svg>\n                <span className=\"text-green-800\">{success}</span>\n              </div>\n            </div>\n          )}\n\n          {/* Filters and Search */}\n          <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n            <div className=\"flex flex-col sm:flex-row gap-4\">\n              <div className=\"flex space-x-2\">\n                {[\n                  { key: \"all\", label: \"All Agents\" },\n                  { key: \"active\", label: \"Active\" },\n                  { key: \"inactive\", label: \"Inactive\" },\n                ].map((filterOption) => (\n                  <button\n                    key={filterOption.key}\n                    onClick={() => setFilter(filterOption.key as any)}\n                    className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n                      filter === filterOption.key\n                        ? \"bg-blue-100 text-blue-700\"\n                        : \"text-gray-600 hover:text-gray-900 hover:bg-gray-100\"\n                    }`}\n                  >\n                    {filterOption.label}\n                  </button>\n                ))}\n              </div>\n              \n              <div className=\"flex-1\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Search agents...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Agents List */}\n          <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Agent\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Contact\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Performance\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Status\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Actions\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {filteredAgents.map((agent) => (\n                    <tr key={agent.id} className=\"hover:bg-gray-50\">\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"flex items-center\">\n                          <div className=\"flex-shrink-0 h-10 w-10\">\n                            <div className=\"h-10 w-10 rounded-full bg-blue-500 flex items-center justify-center\">\n                              <span className=\"text-white font-medium\">\n                                {agent.name.charAt(0).toUpperCase()}\n                              </span>\n                            </div>\n                          </div>\n                          <div className=\"ml-4\">\n                            <div className=\"text-sm font-medium text-gray-900\">\n                              {agent.name}\n                            </div>\n                            <div className=\"text-sm text-gray-500\">\n                              {agent.email}\n                            </div>\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm text-gray-900\">\n                          {agent.phone || 'No phone'}\n                        </div>\n                        <div className=\"text-sm text-gray-500\">\n                          Last login: {agent.lastLoginAt ? formatDate(agent.lastLoginAt) : 'Never'}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm text-gray-900\">\n                          {agent.stats.completedFiles}/{agent.stats.totalFiles} completed\n                        </div>\n                        <div className=\"text-sm text-gray-500\">\n                          {agent.stats.pendingFiles} pending\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                          agent.isActive \n                            ? 'bg-green-100 text-green-800' \n                            : 'bg-red-100 text-red-800'\n                        }`}>\n                          {agent.isActive ? 'Active' : 'Inactive'}\n                        </span>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                        <div className=\"flex flex-wrap gap-2\">\n                          <button\n                            onClick={() => setEditingAgent(agent)}\n                            className=\"text-blue-600 hover:text-blue-900\"\n                          >\n                            Edit\n                          </button>\n                          <button\n                            onClick={() => handleUpdateAgent(agent.id, { isActive: !agent.isActive })}\n                            className={`${\n                              agent.isActive \n                                ? 'text-red-600 hover:text-red-900' \n                                : 'text-green-600 hover:text-green-900'\n                            }`}\n                          >\n                            {agent.isActive ? 'Block' : 'Unblock'}\n                          </button>\n                          <button\n                            onClick={() => setResettingAgent(agent)}\n                            className=\"text-yellow-600 hover:text-yellow-900\"\n                          >\n                            Update Password\n                          </button>\n                          <button\n                            onClick={() => handleDeleteAgent(agent.id)}\n                            className=\"text-red-600 hover:text-red-900\"\n                          >\n                            Delete\n                          </button>\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          {filteredAgents.length === 0 && (\n            <div className=\"bg-white rounded-lg shadow-md p-8 text-center\">\n              <svg className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\" />\n              </svg>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No agents found</h3>\n              <p className=\"text-gray-500 mb-4\">\n                {searchTerm ? 'Try adjusting your search criteria' : 'Get started by adding your first agent'}\n              </p>\n              <button\n                onClick={() => setShowAddModal(true)}\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\n              >\n                Add Agent\n              </button>\n            </div>\n          )}\n        </div>\n      </main>\n\n      {/* Add Agent Modal */}\n      {showAddModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Add New Agent</h2>\n            \n            {error && (\n              <div className=\"bg-red-50 border border-red-200 rounded-lg p-3 mb-4\">\n                <div className=\"flex items-center\">\n                  <svg className=\"w-5 h-5 text-red-400 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                  <span className=\"text-red-800 text-sm\">{error}</span>\n                </div>\n              </div>\n            )}\n            \n            <form onSubmit={handleAddAgent}>\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    required\n                    value={formData.name}\n                    onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Email\n                  </label>\n                  <input\n                    type=\"email\"\n                    required\n                    value={formData.email}\n                    onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Password\n                  </label>\n                  <input\n                    type=\"password\"\n                    required\n                    minLength={6}\n                    value={formData.password}\n                    onChange={(e) => setFormData({ ...formData, password: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  />\n                  <p className=\"text-xs text-gray-500 mt-1\">Minimum 6 characters</p>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Phone (Optional)\n                  </label>\n                  <input\n                    type=\"tel\"\n                    value={formData.phone}\n                    onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  />\n                </div>\n              </div>\n              <div className=\"flex justify-end space-x-3 mt-6\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setShowAddModal(false);\n                    setError(''); // Clear error when closing\n                  }}\n                  className=\"px-4 py-2 text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n                >\n                  Create Agent\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Edit Agent Modal */}\n      {editingAgent && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Edit Agent</h2>\n            <form onSubmit={(e) => {\n              e.preventDefault();\n              \n              // Trim and validate inputs\n              const trimmedName = formData.name.trim();\n              const trimmedEmail = formData.email.trim();\n              const trimmedPhone = formData.phone.trim();\n              \n              if (!trimmedName || !trimmedEmail) {\n                setError('Name and email are required');\n                return;\n              }\n              \n              // Validate email format\n              const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n              if (!emailRegex.test(trimmedEmail)) {\n                setError('Please enter a valid email address');\n                return;\n              }\n              \n              handleUpdateAgent(editingAgent.id, {\n                name: trimmedName,\n                email: trimmedEmail,\n                phone: trimmedPhone\n              });\n              setEditingAgent(null);\n              setFormData({ name: \"\", email: \"\", password: \"\", phone: \"\" });\n            }}>\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    required\n                    value={formData.name}\n                    onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Email\n                  </label>\n                  <input\n                    type=\"email\"\n                    required\n                    value={formData.email}\n                    onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Phone (Optional)\n                  </label>\n                  <input\n                    type=\"tel\"\n                    value={formData.phone}\n                    onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  />\n                </div>\n              </div>\n              <div className=\"flex justify-end space-x-3 mt-6\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setEditingAgent(null);\n                    setFormData({ name: \"\", email: \"\", password: \"\", phone: \"\" });\n                  }}\n                  className=\"px-4 py-2 text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n                >\n                  Update Agent\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Update Password Modal */}\n      {resettingAgent && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Update Password</h2>\n            <form onSubmit={(e) => {\n              e.preventDefault();\n              handleUpdatePassword(resettingAgent.id);\n            }}>\n              <div className=\"space-y-4\">\n                <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                  <div className=\"flex\">\n                    <div className=\"flex-shrink-0\">\n                      <svg className=\"h-5 w-5 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                      </svg>\n                    </div>\n                    <div className=\"ml-3\">\n                      <h3 className=\"text-sm font-medium text-blue-800\">\n                        Update Password for {resettingAgent.name}\n                      </h3>\n                      <div className=\"mt-2 text-sm text-blue-700\">\n                        <p>Enter a new password for this agent. They will need to use this password for their next login.</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Agent Details:</h4>\n                  <div className=\"text-sm text-gray-600 space-y-1\">\n                    <p><strong>Name:</strong> {resettingAgent.name}</p>\n                    <p><strong>Email:</strong> {resettingAgent.email}</p>\n                    <p><strong>Role:</strong> Agent</p>\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    New Password\n                  </label>\n                  <input\n                    type=\"password\"\n                    value={formData.password}\n                    onChange={(e) => setFormData({ ...formData, password: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"Enter new password\"\n                    required\n                    minLength={6}\n                  />\n                  <p className=\"text-xs text-gray-500 mt-1\">Password must be at least 6 characters long</p>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Confirm New Password\n                  </label>\n                  <input\n                    type=\"password\"\n                    value={formData.confirmPassword || ''}\n                    onChange={(e) => setFormData({ ...formData, confirmPassword: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"Confirm new password\"\n                    required\n                    minLength={6}\n                  />\n                </div>\n              </div>\n              \n              <div className=\"flex justify-end space-x-3 mt-6\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setResettingAgent(null);\n                    setFormData({ ...formData, password: '', confirmPassword: '' });\n                  }}\n                  className=\"px-4 py-2 text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n                >\n                  Update Password\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}