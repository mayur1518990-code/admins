{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/hosting%20admin/apps/admin-app/src/lib/firebase-admin.ts"],"sourcesContent":["import { initializeApp, getApps, cert } from 'firebase-admin/app';\nimport { getAuth } from 'firebase-admin/auth';\nimport { getFirestore } from 'firebase-admin/firestore';\nimport { getStorage } from 'firebase-admin/storage';\n\n// Initialize Firebase Admin\nconst privateKey = process.env.FIREBASE_PRIVATE_KEY?.replace(/^\"|\"$/g, '') || '';\n\nconst firebaseAdminConfig = {\n  credential: cert({\n    projectId: process.env.FIREBASE_PROJECT_ID,\n    clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\n    privateKey: privateKey,\n  }),\n};\n\n// Initialize Firebase Admin\nconst adminApp = getApps().length === 0 ? initializeApp(firebaseAdminConfig) : getApps()[0];\n\n// Initialize Firebase Admin services\nexport const adminAuth = getAuth(adminApp);\nexport const adminDb = getFirestore(adminApp);\nexport const adminStorage = getStorage(adminApp);\n\nexport default adminApp;\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;AAEA,4BAA4B;AAC5B,MAAM,aAAa,QAAQ,GAAG,CAAC,oBAAoB,EAAE,QAAQ,UAAU,OAAO;AAE9E,MAAM,sBAAsB;IAC1B,YAAY,IAAA,wJAAI,EAAC;QACf,WAAW,QAAQ,GAAG,CAAC,mBAAmB;QAC1C,aAAa,QAAQ,GAAG,CAAC,qBAAqB;QAC9C,YAAY;IACd;AACF;AAEA,4BAA4B;AAC5B,MAAM,WAAW,IAAA,2JAAO,IAAG,MAAM,KAAK,IAAI,IAAA,iKAAa,EAAC,uBAAuB,IAAA,2JAAO,GAAE,CAAC,EAAE;AAGpF,MAAM,YAAY,IAAA,6JAAO,EAAC;AAC1B,MAAM,UAAU,IAAA,4KAAY,EAAC;AAC7B,MAAM,eAAe,IAAA,sKAAU,EAAC;uCAExB","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/hosting%20admin/apps/admin-app/src/app/api/agent/login/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\nimport { adminDb, adminAuth } from \"@/lib/firebase-admin\";\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const { email, password } = await request.json();\r\n\r\n    if (!email || !password) {\r\n      return NextResponse.json({ \r\n        success: false, \r\n        error: 'Email and password are required' \r\n      }, { status: 400 });\r\n    }\r\n\r\n    // Search for agent in agents collection by email\r\n    const queryStart = Date.now();\r\n    const agentsSnapshot = await adminDb.collection('agents')\r\n      .where('email', '==', email)\r\n      .limit(1)\r\n      .get();\r\n    \r\n\r\n    if (agentsSnapshot.empty) {\r\n      return NextResponse.json({ \r\n        success: false, \r\n        error: 'Invalid email or password' \r\n      }, { status: 401 });\r\n    }\r\n\r\n    const agentDoc = agentsSnapshot.docs[0];\r\n    const agentData = agentDoc.data();\r\n    const agentId = agentDoc.id;\r\n\r\n    // Check if agent is active\r\n    if (!agentData.isActive) {\r\n      return NextResponse.json({ \r\n        success: false, \r\n        error: 'Agent account is deactivated' \r\n      }, { status: 401 });\r\n    }\r\n\r\n    // Check if password matches (stored in document)\r\n    if (agentData.password !== password) {\r\n      return NextResponse.json({ \r\n        success: false, \r\n        error: 'Invalid email or password' \r\n      }, { status: 401 });\r\n    }\r\n\r\n    // Check if Firebase Auth user exists, if not create one\r\n    let firebaseUser;\r\n    try {\r\n      firebaseUser = await adminAuth.getUser(agentId);\r\n    } catch (error) {\r\n      // User doesn't exist in Firebase Auth, create one\r\n      try {\r\n        firebaseUser = await adminAuth.createUser({\r\n          uid: agentId,\r\n          email: agentData.email,\r\n          password: agentData.password,\r\n          displayName: agentData.name,\r\n          disabled: !agentData.isActive\r\n        });\r\n        \r\n      } catch (createError) {\r\n        console.error('Error creating Firebase Auth user:', createError);\r\n        return NextResponse.json({ \r\n          success: false, \r\n          error: 'Failed to create authentication user' \r\n        }, { status: 500 });\r\n      }\r\n    }\r\n\r\n    // Generate custom token for agent\r\n    const customToken = await adminAuth.createCustomToken(agentId, {\r\n      role: 'agent',\r\n      agentId: agentId,\r\n      name: agentData.name,\r\n      email: agentData.email\r\n    });\r\n\r\n    // OPTIMIZATION: Parallel operations (update last login + log)\r\n    await Promise.all([\r\n      adminDb.collection('agents').doc(agentId).update({\r\n        lastLoginAt: new Date(),\r\n        updatedAt: new Date()\r\n      }),\r\n      adminDb.collection('logs').add({\r\n        action: 'agent_login',\r\n        agentId: agentId,\r\n        agentName: agentData.name,\r\n        agentEmail: agentData.email,\r\n        timestamp: new Date()\r\n      })\r\n    ]);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: 'Login successful',\r\n      data: {\r\n        agentId: agentId,\r\n        name: agentData.name,\r\n        email: agentData.email,\r\n        role: 'agent',\r\n        customToken: customToken\r\n      }\r\n    });\r\n\r\n  } catch (error: any) {\r\n    console.error('Error in agent login:', error);\r\n    return NextResponse.json(\r\n      { success: false, error: 'Login failed' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;;;;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,QAAQ,IAAI;QAE9C,IAAI,CAAC,SAAS,CAAC,UAAU;YACvB,OAAO,gJAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,OAAO;YACT,GAAG;gBAAE,QAAQ;YAAI;QACnB;QAEA,iDAAiD;QACjD,MAAM,aAAa,KAAK,GAAG;QAC3B,MAAM,iBAAiB,MAAM,oKAAO,CAAC,UAAU,CAAC,UAC7C,KAAK,CAAC,SAAS,MAAM,OACrB,KAAK,CAAC,GACN,GAAG;QAGN,IAAI,eAAe,KAAK,EAAE;YACxB,OAAO,gJAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,OAAO;YACT,GAAG;gBAAE,QAAQ;YAAI;QACnB;QAEA,MAAM,WAAW,eAAe,IAAI,CAAC,EAAE;QACvC,MAAM,YAAY,SAAS,IAAI;QAC/B,MAAM,UAAU,SAAS,EAAE;QAE3B,2BAA2B;QAC3B,IAAI,CAAC,UAAU,QAAQ,EAAE;YACvB,OAAO,gJAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,OAAO;YACT,GAAG;gBAAE,QAAQ;YAAI;QACnB;QAEA,iDAAiD;QACjD,IAAI,UAAU,QAAQ,KAAK,UAAU;YACnC,OAAO,gJAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,OAAO;YACT,GAAG;gBAAE,QAAQ;YAAI;QACnB;QAEA,wDAAwD;QACxD,IAAI;QACJ,IAAI;YACF,eAAe,MAAM,sKAAS,CAAC,OAAO,CAAC;QACzC,EAAE,OAAO,OAAO;YACd,kDAAkD;YAClD,IAAI;gBACF,eAAe,MAAM,sKAAS,CAAC,UAAU,CAAC;oBACxC,KAAK;oBACL,OAAO,UAAU,KAAK;oBACtB,UAAU,UAAU,QAAQ;oBAC5B,aAAa,UAAU,IAAI;oBAC3B,UAAU,CAAC,UAAU,QAAQ;gBAC/B;YAEF,EAAE,OAAO,aAAa;gBACpB,QAAQ,KAAK,CAAC,sCAAsC;gBACpD,OAAO,gJAAY,CAAC,IAAI,CAAC;oBACvB,SAAS;oBACT,OAAO;gBACT,GAAG;oBAAE,QAAQ;gBAAI;YACnB;QACF;QAEA,kCAAkC;QAClC,MAAM,cAAc,MAAM,sKAAS,CAAC,iBAAiB,CAAC,SAAS;YAC7D,MAAM;YACN,SAAS;YACT,MAAM,UAAU,IAAI;YACpB,OAAO,UAAU,KAAK;QACxB;QAEA,8DAA8D;QAC9D,MAAM,QAAQ,GAAG,CAAC;YAChB,oKAAO,CAAC,UAAU,CAAC,UAAU,GAAG,CAAC,SAAS,MAAM,CAAC;gBAC/C,aAAa,IAAI;gBACjB,WAAW,IAAI;YACjB;YACA,oKAAO,CAAC,UAAU,CAAC,QAAQ,GAAG,CAAC;gBAC7B,QAAQ;gBACR,SAAS;gBACT,WAAW,UAAU,IAAI;gBACzB,YAAY,UAAU,KAAK;gBAC3B,WAAW,IAAI;YACjB;SACD;QAED,OAAO,gJAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,SAAS;YACT,MAAM;gBACJ,SAAS;gBACT,MAAM,UAAU,IAAI;gBACpB,OAAO,UAAU,KAAK;gBACtB,MAAM;gBACN,aAAa;YACf;QACF;IAEF,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,OAAO;QAAe,GACxC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}