{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/hosting%20admin/apps/admin-app/src/lib/firebase-admin.ts"],"sourcesContent":["import { initializeApp, getApps, cert } from 'firebase-admin/app';\nimport { getAuth } from 'firebase-admin/auth';\nimport { getFirestore } from 'firebase-admin/firestore';\nimport { getStorage } from 'firebase-admin/storage';\n\n// Initialize Firebase Admin\nconst privateKey = process.env.FIREBASE_PRIVATE_KEY?.replace(/^\"|\"$/g, '') || '';\n\nconst firebaseAdminConfig = {\n  credential: cert({\n    projectId: process.env.FIREBASE_PROJECT_ID,\n    clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\n    privateKey: privateKey,\n  }),\n};\n\n// Initialize Firebase Admin\nconst adminApp = getApps().length === 0 ? initializeApp(firebaseAdminConfig) : getApps()[0];\n\n// Initialize Firebase Admin services\nexport const adminAuth = getAuth(adminApp);\nexport const adminDb = getFirestore(adminApp);\nexport const adminStorage = getStorage(adminApp);\n\nexport default adminApp;\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;AAEA,4BAA4B;AAC5B,MAAM,aAAa,QAAQ,GAAG,CAAC,oBAAoB,EAAE,QAAQ,UAAU,OAAO;AAE9E,MAAM,sBAAsB;IAC1B,YAAY,IAAA,wJAAI,EAAC;QACf,WAAW,QAAQ,GAAG,CAAC,mBAAmB;QAC1C,aAAa,QAAQ,GAAG,CAAC,qBAAqB;QAC9C,YAAY;IACd;AACF;AAEA,4BAA4B;AAC5B,MAAM,WAAW,IAAA,2JAAO,IAAG,MAAM,KAAK,IAAI,IAAA,iKAAa,EAAC,uBAAuB,IAAA,2JAAO,GAAE,CAAC,EAAE;AAGpF,MAAM,YAAY,IAAA,6JAAO,EAAC;AAC1B,MAAM,UAAU,IAAA,4KAAY,EAAC;AAC7B,MAAM,eAAe,IAAA,sKAAU,EAAC;uCAExB","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/hosting%20admin/apps/admin-app/src/lib/admin-auth.ts"],"sourcesContent":["import { NextRequest } from \"next/server\";\nimport { cookies } from \"next/headers\";\nimport { adminAuth, adminDb } from \"./firebase-admin\";\n\n// Admin authentication helper that verifies against admins collection\nexport async function verifyAdminAuth() {\n  try {\n    const cookieStore = await cookies();\n    const token = cookieStore.get('admin-token')?.value;\n    \n    // For development, we'll allow access with a simple token check\n    if (token === 'dev_admin_token') {\n      return { \n        adminId: \"dev_admin\", \n        name: \"Development Admin\",\n        email: \"admin@docuploaer.com\",\n        role: \"admin\"\n      };\n    }\n\n    if (!token) {\n      throw new Error('No admin authentication token found');\n    }\n\n    // Verify the token with Firebase Admin\n    const decodedToken = await adminAuth.verifyIdToken(token);\n    \n    // Check if this is a custom token with admin role\n    if (decodedToken.role === 'admin') {\n      return {\n        adminId: decodedToken.adminId || decodedToken.uid,\n        name: decodedToken.name || 'Admin',\n        email: decodedToken.email || 'admin@example.com',\n        role: \"admin\"\n      };\n    }\n    \n    // Get admin data from admins collection\n    const adminDoc = await adminDb.collection('admins').doc(decodedToken.uid).get();\n    \n    if (!adminDoc.exists) {\n      throw new Error('Admin not found in database');\n    }\n\n    const adminData = adminDoc.data();\n    \n    if (!adminData?.isActive) {\n      throw new Error('Admin account is deactivated');\n    }\n\n    return {\n      adminId: decodedToken.uid,\n      name: adminData.name,\n      email: adminData.email,\n      role: \"admin\"\n    };\n  } catch (error) {\n    // For development, return default admin even on error\n    return { \n      adminId: \"dev_admin\", \n      name: \"Development Admin\",\n      email: \"admin@docuploaer.com\",\n      role: \"admin\"\n    };\n  }\n}\n\n// Helper function to get query parameters\nexport function getQueryParams(request: NextRequest) {\n  const { searchParams } = new URL(request.url);\n  return {\n    filter: searchParams.get('filter') || 'all',\n    dateFilter: searchParams.get('dateFilter') || 'all',\n    search: searchParams.get('search') || '',\n    limit: parseInt(searchParams.get('limit') || '50'),\n    offset: parseInt(searchParams.get('offset') || '0'),\n    status: searchParams.get('status'),\n    userId: searchParams.get('userId'),\n    fileId: searchParams.get('fileId'),\n    startDate: searchParams.get('startDate'),\n    endDate: searchParams.get('endDate')\n  };\n}\n"],"names":[],"mappings":";;;;;;AACA;AACA;;;;;;;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,cAAc,MAAM,IAAA,4IAAO;QACjC,MAAM,QAAQ,YAAY,GAAG,CAAC,gBAAgB;QAE9C,gEAAgE;QAChE,IAAI,UAAU,mBAAmB;YAC/B,OAAO;gBACL,SAAS;gBACT,MAAM;gBACN,OAAO;gBACP,MAAM;YACR;QACF;QAEA,IAAI,CAAC,OAAO;YACV,MAAM,IAAI,MAAM;QAClB;QAEA,uCAAuC;QACvC,MAAM,eAAe,MAAM,sKAAS,CAAC,aAAa,CAAC;QAEnD,kDAAkD;QAClD,IAAI,aAAa,IAAI,KAAK,SAAS;YACjC,OAAO;gBACL,SAAS,aAAa,OAAO,IAAI,aAAa,GAAG;gBACjD,MAAM,aAAa,IAAI,IAAI;gBAC3B,OAAO,aAAa,KAAK,IAAI;gBAC7B,MAAM;YACR;QACF;QAEA,wCAAwC;QACxC,MAAM,WAAW,MAAM,oKAAO,CAAC,UAAU,CAAC,UAAU,GAAG,CAAC,aAAa,GAAG,EAAE,GAAG;QAE7E,IAAI,CAAC,SAAS,MAAM,EAAE;YACpB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,YAAY,SAAS,IAAI;QAE/B,IAAI,CAAC,WAAW,UAAU;YACxB,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO;YACL,SAAS,aAAa,GAAG;YACzB,MAAM,UAAU,IAAI;YACpB,OAAO,UAAU,KAAK;YACtB,MAAM;QACR;IACF,EAAE,OAAO,OAAO;QACd,sDAAsD;QACtD,OAAO;YACL,SAAS;YACT,MAAM;YACN,OAAO;YACP,MAAM;QACR;IACF;AACF;AAGO,SAAS,eAAe,OAAoB;IACjD,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;IAC5C,OAAO;QACL,QAAQ,aAAa,GAAG,CAAC,aAAa;QACtC,YAAY,aAAa,GAAG,CAAC,iBAAiB;QAC9C,QAAQ,aAAa,GAAG,CAAC,aAAa;QACtC,OAAO,SAAS,aAAa,GAAG,CAAC,YAAY;QAC7C,QAAQ,SAAS,aAAa,GAAG,CAAC,aAAa;QAC/C,QAAQ,aAAa,GAAG,CAAC;QACzB,QAAQ,aAAa,GAAG,CAAC;QACzB,QAAQ,aAAa,GAAG,CAAC;QACzB,WAAW,aAAa,GAAG,CAAC;QAC5B,SAAS,aAAa,GAAG,CAAC;IAC5B;AACF","debugId":null}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/hosting%20admin/apps/admin-app/src/app/api/admin/dashboard/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\nimport { adminDb } from \"@/lib/firebase-admin\";\r\nimport { verifyAdminAuth } from \"@/lib/admin-auth\";\r\n\r\n// Helper function to handle Firestore connection issues with retry logic\r\nasync function withRetry<T>(\r\n  operation: () => Promise<T>,\r\n  maxRetries: number = 3,\r\n  delay: number = 1000\r\n): Promise<T> {\r\n  let lastError: any;\r\n  \r\n  for (let attempt = 1; attempt <= maxRetries; attempt++) {\r\n    try {\r\n      return await operation();\r\n    } catch (error: any) {\r\n      lastError = error;\r\n      \r\n      // Check if it's a connection error that we should retry\r\n      if (error.code === 14 || // UNAVAILABLE\r\n          error.message?.includes('No connection established') ||\r\n          error.message?.includes('network socket disconnected') ||\r\n          error.message?.includes('TLS connection') ||\r\n          error.code === 'ECONNRESET' ||\r\n          error.code === 'ENOTFOUND') {\r\n        \r\n        console.log(`[RETRY] Attempt ${attempt}/${maxRetries} failed, retrying in ${delay}ms...`);\r\n        \r\n        if (attempt < maxRetries) {\r\n          await new Promise(resolve => setTimeout(resolve, delay));\r\n          delay *= 2; // Exponential backoff\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      // If it's not a retryable error or we've exhausted retries, throw\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  throw lastError;\r\n}\r\n\r\n// GET - Get admin dashboard statistics (ADMIN ONLY)\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verify admin authentication\r\n    const admin = await verifyAdminAuth();\r\n    \r\n    // Ensure only admin role can access this endpoint\r\n    if (admin.role !== 'admin') {\r\n      return NextResponse.json(\r\n        { success: false, message: \"Admin access required\" },\r\n        { status: 403 }\r\n      );\r\n    }\r\n\r\n    const { searchParams } = new URL(request.url);\r\n    const period = searchParams.get('period') || '30d'; // '7d', '30d', '90d', '1y'\r\n\r\n    // Calculate date range\r\n    const endDate = new Date();\r\n    const startDate = new Date();\r\n    \r\n    switch (period) {\r\n      case '7d':\r\n        startDate.setDate(endDate.getDate() - 7);\r\n        break;\r\n      case '30d':\r\n        startDate.setDate(endDate.getDate() - 30);\r\n        break;\r\n      case '90d':\r\n        startDate.setDate(endDate.getDate() - 90);\r\n        break;\r\n      case '1y':\r\n        startDate.setFullYear(endDate.getFullYear() - 1);\r\n        break;\r\n      default:\r\n        startDate.setDate(endDate.getDate() - 30);\r\n    }\r\n\r\n    // Get all data in parallel with retry logic (avoiding composite indexes)\r\n    const [\r\n      allUsersSnapshot,\r\n      filesSnapshot,\r\n      paymentsSnapshot,\r\n      logsSnapshot\r\n    ] = await Promise.all([\r\n      // All users (we'll filter by role in code)\r\n      withRetry(() => adminDb.collection('users').get()).catch(() => ({ docs: [], size: 0 })),\r\n      \r\n      // Files\r\n      withRetry(() => adminDb.collection('files').get()).catch(() => ({ docs: [], size: 0 })),\r\n      \r\n      // Payments\r\n      withRetry(() => adminDb.collection('payments').get()).catch(() => ({ docs: [], size: 0 })),\r\n      \r\n      // Recent logs (simplified query)\r\n      withRetry(() => adminDb.collection('logs')\r\n        .orderBy('timestamp', 'desc')\r\n        .limit(100)\r\n        .get()\r\n      ).catch(() => ({ docs: [], size: 0 }))\r\n    ]);\r\n\r\n    // Filter users by role\r\n    const usersSnapshot = {\r\n      docs: allUsersSnapshot.docs.filter(doc => doc.data().role === 'user'),\r\n      size: allUsersSnapshot.docs.filter(doc => doc.data().role === 'user').length\r\n    };\r\n    \r\n    const agentsSnapshot = {\r\n      docs: allUsersSnapshot.docs.filter(doc => doc.data().role === 'agent'),\r\n      size: allUsersSnapshot.docs.filter(doc => doc.data().role === 'agent').length\r\n    };\r\n\r\n    // Process users data\r\n    const totalUsers = usersSnapshot.size;\r\n    const activeUsers = usersSnapshot.docs.filter(doc => doc.data().isActive).length;\r\n    const newUsers = usersSnapshot.docs.filter(doc => {\r\n      const createdAt = doc.data().createdAt?.toDate?.() || doc.data().createdAt;\r\n      return createdAt >= startDate;\r\n    }).length;\r\n\r\n    // Process agents data\r\n    const totalAgents = agentsSnapshot.size;\r\n    const activeAgents = agentsSnapshot.docs.filter(doc => doc.data().isActive).length;\r\n    const newAgents = agentsSnapshot.docs.filter(doc => {\r\n      const createdAt = doc.data().createdAt?.toDate?.() || doc.data().createdAt;\r\n      return createdAt >= startDate;\r\n    }).length;\r\n\r\n    // Process files data\r\n    const totalFiles = filesSnapshot.size;\r\n    const filesByStatus = filesSnapshot.docs.reduce((acc, doc) => {\r\n      const status = doc.data().status;\r\n      acc[status] = (acc[status] || 0) + 1;\r\n      return acc;\r\n    }, {} as Record<string, number>);\r\n\r\n    const newFiles = filesSnapshot.docs.filter(doc => {\r\n      const uploadedAt = doc.data().uploadedAt?.toDate?.() || doc.data().uploadedAt;\r\n      return uploadedAt >= startDate;\r\n    }).length;\r\n\r\n    const unassignedFiles = filesSnapshot.docs.filter(doc => \r\n      doc.data().status === 'paid' && !doc.data().assignedAgentId\r\n    ).length;\r\n\r\n    // Process payments data\r\n    const totalPayments = paymentsSnapshot.size;\r\n    const successfulPayments = paymentsSnapshot.docs.filter(doc => \r\n      doc.data().status === 'captured'\r\n    ).length;\r\n\r\n    const totalRevenue = paymentsSnapshot.docs\r\n      .filter(doc => doc.data().status === 'captured')\r\n      .reduce((sum, doc) => sum + (doc.data().amount || 0), 0);\r\n\r\n    const newPayments = paymentsSnapshot.docs.filter(doc => {\r\n      const createdAt = doc.data().createdAt?.toDate?.() || doc.data().createdAt;\r\n      return createdAt >= startDate;\r\n    }).length;\r\n\r\n    const newRevenue = paymentsSnapshot.docs\r\n      .filter(doc => {\r\n        const createdAt = doc.data().createdAt?.toDate?.() || doc.data().createdAt;\r\n        return createdAt >= startDate && doc.data().status === 'captured';\r\n      })\r\n      .reduce((sum, doc) => sum + (doc.data().amount || 0), 0);\r\n\r\n    // Process logs for activity insights\r\n    const recentActivity = logsSnapshot.docs.slice(0, 10).map(doc => {\r\n      const data = doc.data();\r\n      return {\r\n        id: doc.id,\r\n        actionType: data.actionType,\r\n        actorId: data.actorId,\r\n        actorType: data.actorType,\r\n        timestamp: data.timestamp?.toDate?.() || data.timestamp,\r\n        details: data.details || {}\r\n      };\r\n    });\r\n\r\n    // Calculate success rates\r\n    const paymentSuccessRate = totalPayments > 0 \r\n      ? ((successfulPayments / totalPayments) * 100).toFixed(2)\r\n      : 0;\r\n\r\n    const fileCompletionRate = totalFiles > 0 \r\n      ? ((filesByStatus.completed || 0) / totalFiles * 100).toFixed(2)\r\n      : 0;\r\n\r\n    // Get agent performance data\r\n    const agentPerformance = await Promise.all(\r\n      agentsSnapshot.docs.map(async (agentDoc) => {\r\n        const agentData = agentDoc.data();\r\n        const agentId = agentDoc.id;\r\n        \r\n        const agentFilesSnapshot = await withRetry(() => \r\n          adminDb.collection('files')\r\n            .where('assignedAgentId', '==', agentId)\r\n            .get()\r\n        );\r\n\r\n        const completedFiles = agentFilesSnapshot.docs.filter(doc => \r\n          doc.data().status === 'completed'\r\n        ).length;\r\n\r\n        const pendingFiles = agentFilesSnapshot.docs.filter(doc => \r\n          doc.data().status === 'paid' || doc.data().status === 'processing'\r\n        ).length;\r\n\r\n        return {\r\n          id: agentId,\r\n          name: agentData.name,\r\n          email: agentData.email,\r\n          totalFiles: agentFilesSnapshot.size,\r\n          completedFiles,\r\n          pendingFiles,\r\n          completionRate: agentFilesSnapshot.size > 0 \r\n            ? ((completedFiles / agentFilesSnapshot.size) * 100).toFixed(2)\r\n            : 0\r\n        };\r\n      })\r\n    );\r\n\r\n    // Get daily statistics for charts\r\n    const dailyStats = await getDailyStats(startDate, endDate).catch(() => []);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      period,\r\n      overview: {\r\n        totalUsers,\r\n        activeUsers,\r\n        newUsers,\r\n        totalAgents,\r\n        activeAgents,\r\n        newAgents,\r\n        totalFiles,\r\n        newFiles,\r\n        unassignedFiles,\r\n        totalPayments,\r\n        successfulPayments,\r\n        newPayments,\r\n        totalRevenue,\r\n        newRevenue\r\n      },\r\n      files: {\r\n        total: totalFiles,\r\n        byStatus: filesByStatus,\r\n        new: newFiles,\r\n        unassigned: unassignedFiles,\r\n        completionRate: fileCompletionRate\r\n      },\r\n      payments: {\r\n        total: totalPayments,\r\n        successful: successfulPayments,\r\n        new: newPayments,\r\n        totalRevenue,\r\n        newRevenue,\r\n        successRate: paymentSuccessRate\r\n      },\r\n      agents: {\r\n        total: totalAgents,\r\n        active: activeAgents,\r\n        new: newAgents,\r\n        performance: agentPerformance\r\n      },\r\n      activity: {\r\n        recent: recentActivity,\r\n        dailyStats\r\n      }\r\n    });\r\n\r\n  } catch (error: any) {\r\n    console.error(\"Error fetching dashboard data:\", error);\r\n    \r\n    // Handle specific error types\r\n    if (error.code === 14 || error.message?.includes('No connection established')) {\r\n      return NextResponse.json(\r\n        { success: false, message: \"Database connection failed. Please try again.\" },\r\n        { status: 503 }\r\n      );\r\n    }\r\n    \r\n    if (error.name === 'AbortError' || error.message?.includes('timeout')) {\r\n      return NextResponse.json(\r\n        { success: false, message: \"Request timed out. Please try again.\" },\r\n        { status: 408 }\r\n      );\r\n    }\r\n    \r\n    return NextResponse.json(\r\n      { success: false, message: \"Failed to fetch dashboard data\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// Helper function to get daily statistics (NO COMPOSITE INDEXES)\r\nasync function getDailyStats(startDate: Date, endDate: Date) {\r\n  const dailyData: Record<string, any> = {};\r\n  \r\n  // Initialize all days in range\r\n  for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {\r\n    const dateKey = d.toISOString().split('T')[0];\r\n    dailyData[dateKey] = {\r\n      date: dateKey,\r\n      files: 0,\r\n      payments: 0,\r\n      revenue: 0,\r\n      users: 0\r\n    };\r\n  }\r\n\r\n  try {\r\n    // Get all files and filter by date range (NO INDEX REQUIRED)\r\n    const filesSnapshot = await withRetry(() => adminDb.collection('files').get()).catch(() => ({ docs: [] }));\r\n    \r\n    filesSnapshot.docs.forEach(doc => {\r\n      const uploadedAt = doc.data().uploadedAt?.toDate?.() || doc.data().uploadedAt;\r\n      if (uploadedAt && uploadedAt >= startDate && uploadedAt <= endDate) {\r\n        const dateKey = uploadedAt.toISOString().split('T')[0];\r\n        if (dailyData[dateKey]) {\r\n          dailyData[dateKey].files++;\r\n        }\r\n      }\r\n    });\r\n\r\n    // Get all payments and filter by date range (NO INDEX REQUIRED)\r\n    const paymentsSnapshot = await withRetry(() => adminDb.collection('payments').get()).catch(() => ({ docs: [] }));\r\n    \r\n    paymentsSnapshot.docs.forEach(doc => {\r\n      const createdAt = doc.data().createdAt?.toDate?.() || doc.data().createdAt;\r\n      if (createdAt && createdAt >= startDate && createdAt <= endDate) {\r\n        const dateKey = createdAt.toISOString().split('T')[0];\r\n        if (dailyData[dateKey]) {\r\n          dailyData[dateKey].payments++;\r\n          if (doc.data().status === 'captured') {\r\n            dailyData[dateKey].revenue += doc.data().amount || 0;\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    // Get all users and filter by role and date range (NO INDEX REQUIRED)\r\n    const usersSnapshot = await withRetry(() => adminDb.collection('users').get()).catch(() => ({ docs: [] }));\r\n    \r\n    usersSnapshot.docs.forEach(doc => {\r\n      const userData = doc.data();\r\n      if (userData.role === 'user') {\r\n        const createdAt = userData.createdAt?.toDate?.() || userData.createdAt;\r\n        if (createdAt && createdAt >= startDate && createdAt <= endDate) {\r\n          const dateKey = createdAt.toISOString().split('T')[0];\r\n          if (dailyData[dateKey]) {\r\n            dailyData[dateKey].users++;\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error fetching daily stats:', error);\r\n    // Return empty data if there's an error\r\n  }\r\n\r\n  return Object.values(dailyData).sort((a, b) => a.date.localeCompare(b.date));\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}