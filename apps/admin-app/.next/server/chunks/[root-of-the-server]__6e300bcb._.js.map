{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/hosting%20admin/apps/admin-app/src/lib/firebase-admin.ts"],"sourcesContent":["import { initializeApp, getApps, cert } from 'firebase-admin/app';\nimport { getAuth } from 'firebase-admin/auth';\nimport { getFirestore } from 'firebase-admin/firestore';\nimport { getStorage } from 'firebase-admin/storage';\n\n// Initialize Firebase Admin\nconst privateKey = process.env.FIREBASE_PRIVATE_KEY?.replace(/^\"|\"$/g, '') || '';\n\nconst firebaseAdminConfig = {\n  credential: cert({\n    projectId: process.env.FIREBASE_PROJECT_ID,\n    clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\n    privateKey: privateKey,\n  }),\n};\n\n// Initialize Firebase Admin\nconst adminApp = getApps().length === 0 ? initializeApp(firebaseAdminConfig) : getApps()[0];\n\n// Initialize Firebase Admin services\nexport const adminAuth = getAuth(adminApp);\nexport const adminDb = getFirestore(adminApp);\nexport const adminStorage = getStorage(adminApp);\n\nexport default adminApp;\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;AAEA,4BAA4B;AAC5B,MAAM,aAAa,QAAQ,GAAG,CAAC,oBAAoB,EAAE,QAAQ,UAAU,OAAO;AAE9E,MAAM,sBAAsB;IAC1B,YAAY,IAAA,wJAAI,EAAC;QACf,WAAW,QAAQ,GAAG,CAAC,mBAAmB;QAC1C,aAAa,QAAQ,GAAG,CAAC,qBAAqB;QAC9C,YAAY;IACd;AACF;AAEA,4BAA4B;AAC5B,MAAM,WAAW,IAAA,2JAAO,IAAG,MAAM,KAAK,IAAI,IAAA,iKAAa,EAAC,uBAAuB,IAAA,2JAAO,GAAE,CAAC,EAAE;AAGpF,MAAM,YAAY,IAAA,6JAAO,EAAC;AAC1B,MAAM,UAAU,IAAA,4KAAY,EAAC;AAC7B,MAAM,eAAe,IAAA,sKAAU,EAAC;uCAExB","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/hosting%20admin/apps/admin-app/src/lib/server-cache.ts"],"sourcesContent":["type CacheEntry<T> = { data: T; expiresAt: number };\r\n\r\nclass SimpleLRUCache {\r\n  private store = new Map<string, CacheEntry<any>>();\r\n  private order: string[] = [];\r\n  constructor(private maxEntries: number = 200) {}\r\n\r\n  get<T>(key: string): T | undefined {\r\n    const entry = this.store.get(key);\r\n    if (!entry) return undefined;\r\n    if (Date.now() > entry.expiresAt) {\r\n      this.delete(key);\r\n      return undefined;\r\n    }\r\n    // touch\r\n    this.order = this.order.filter(k => k !== key);\r\n    this.order.push(key);\r\n    return entry.data as T;\r\n    }\r\n\r\n  set<T>(key: string, value: T, ttlMs: number): void {\r\n    const expiresAt = Date.now() + ttlMs;\r\n    this.store.set(key, { data: value, expiresAt });\r\n    this.order = this.order.filter(k => k !== key);\r\n    this.order.push(key);\r\n    // evict\r\n    while (this.order.length > this.maxEntries) {\r\n      const oldest = this.order.shift();\r\n      if (oldest) this.store.delete(oldest);\r\n    }\r\n  }\r\n\r\n  delete(key: string): void {\r\n    this.store.delete(key);\r\n    this.order = this.order.filter(k => k !== key);\r\n  }\r\n\r\n  deleteByPrefix(prefix: string): void {\r\n    for (const key of Array.from(this.store.keys())) {\r\n      if (key.startsWith(prefix)) this.delete(key);\r\n    }\r\n  }\r\n}\r\n\r\nexport const serverCache = new SimpleLRUCache(300);\r\n\r\nexport function makeKey(resource: string, parts: Array<string | number | boolean | null | undefined> = []) {\r\n  return `admin:${resource}:${parts.filter(v => v !== undefined && v !== null).join(':')}`;\r\n}\r\n\r\n\r\n\r\n\r\n"],"names":[],"mappings":";;;;;;AAEA,MAAM;;IACI,MAA2C;IAC3C,MAAqB;IAC7B,YAAY,AAAQ,aAAqB,GAAG,CAAE;aAA1B,aAAA;aAFZ,QAAQ,IAAI;aACZ,QAAkB,EAAE;IACmB;IAE/C,IAAO,GAAW,EAAiB;QACjC,MAAM,QAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAC7B,IAAI,CAAC,OAAO,OAAO;QACnB,IAAI,KAAK,GAAG,KAAK,MAAM,SAAS,EAAE;YAChC,IAAI,CAAC,MAAM,CAAC;YACZ,OAAO;QACT;QACA,QAAQ;QACR,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA,IAAK,MAAM;QAC1C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAChB,OAAO,MAAM,IAAI;IACjB;IAEF,IAAO,GAAW,EAAE,KAAQ,EAAE,KAAa,EAAQ;QACjD,MAAM,YAAY,KAAK,GAAG,KAAK;QAC/B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK;YAAE,MAAM;YAAO;QAAU;QAC7C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA,IAAK,MAAM;QAC1C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAChB,QAAQ;QACR,MAAO,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAE;YAC1C,MAAM,SAAS,IAAI,CAAC,KAAK,CAAC,KAAK;YAC/B,IAAI,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAChC;IACF;IAEA,OAAO,GAAW,EAAQ;QACxB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA,IAAK,MAAM;IAC5C;IAEA,eAAe,MAAc,EAAQ;QACnC,KAAK,MAAM,OAAO,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAK;YAC/C,IAAI,IAAI,UAAU,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC;QAC1C;IACF;AACF;AAEO,MAAM,cAAc,IAAI,eAAe;AAEvC,SAAS,QAAQ,QAAgB,EAAE,QAA6D,EAAE;IACvG,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC,EAAE,MAAM,MAAM,CAAC,CAAA,IAAK,MAAM,aAAa,MAAM,MAAM,IAAI,CAAC,MAAM;AAC1F","debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/hosting%20admin/apps/admin-app/src/app/api/agent/files/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { adminDb } from '@/lib/firebase-admin';\nimport { verifyAgentAuth } from '@/lib/agent-auth';\nimport { findAgentFiles } from '@/lib/agent-utils';\nimport { serverCache, makeKey } from '@/lib/server-cache';\n\nexport async function GET(request: NextRequest) {\n  try {\n    // Verify agent authentication\n    const agent = await verifyAgentAuth();\n    if (!agent) {\n      return NextResponse.json({ success: false, error: 'Unauthorized' }, { status: 401 });\n    }\n\n    // Check cache first\n    const cacheKey = makeKey('agent-files', [agent.agentId]);\n    const cached = serverCache.get<{ files: any[] }>(cacheKey);\n    if (cached) {\n      return NextResponse.json({\n        success: true,\n        files: cached.files\n      });\n    }\n\n    // Use the utility function to find files with multiple ID formats\n    const agentFiles = await findAgentFiles(agent.agentId);\n\n    // Convert to the format expected by the rest of the function\n    const filesSnapshot = {\n      docs: agentFiles.map(file => ({\n        id: file.id,\n        data: () => file\n      }))\n    };\n\n    // OPTIMIZATION: Batch fetch all user data (fixes N+1 query problem)\n    const userIds = [...new Set(filesSnapshot.docs.map(doc => doc.data().userId).filter(Boolean))];\n    const completedFileIds = filesSnapshot.docs\n      .map(doc => doc.data().completedFileId)\n      .filter(Boolean);\n\n    // Batch fetch users\n    const userMap = new Map<string, any>();\n    if (userIds.length > 0) {\n      const userPromises = userIds.map(userId => \n        adminDb.collection('users').doc(userId).get().catch(() => null)\n      );\n      const userDocs = await Promise.all(userPromises);\n      userDocs.forEach((doc, idx) => {\n        if (doc && doc.exists) {\n          userMap.set(userIds[idx], doc.data());\n        }\n      });\n    }\n\n    // Batch fetch completed files\n    const completedFileMap = new Map<string, any>();\n    if (completedFileIds.length > 0) {\n      const completedPromises = completedFileIds.map(fileId => \n        adminDb.collection('completedFiles').doc(fileId).get().catch(() => null)\n      );\n      const completedDocs = await Promise.all(completedPromises);\n      completedDocs.forEach((doc, idx) => {\n        if (doc && doc.exists) {\n          completedFileMap.set(completedFileIds[idx], doc.data());\n        }\n      });\n    }\n\n    // Map files with batch-fetched data (no more N+1 queries!)\n    const files = filesSnapshot.docs.map(doc => {\n      const fileData = doc.data();\n      \n      // Get user information from batch-fetched map\n      const userData = userMap.get(fileData.userId);\n      const userEmail = userData?.email || '';\n      const userPhone = userData?.phone || '';\n\n      // Get completed file information from batch-fetched map\n      let completedFile = null;\n      if (fileData.status === 'completed' && fileData.completedFileId) {\n        const completedData = completedFileMap.get(fileData.completedFileId);\n        if (completedData) {\n          completedFile = {\n            filename: completedData.filename || '',\n            originalName: completedData.originalName || '',\n            size: completedData.size || 0,\n            uploadedAt: completedData.uploadedAt || ''\n          };\n        }\n      }\n\n      return {\n        id: doc.id,\n        originalName: fileData.originalName || '',\n        filename: fileData.filename || '',\n        size: fileData.size || 0,\n        mimeType: fileData.mimeType || '',\n        status: fileData.status || 'assigned',\n        uploadedAt: fileData.uploadedAt || '',\n        assignedAt: fileData.assignedAt || '',\n        userId: fileData.userId || '',\n        userEmail,\n        userPhone,\n        completedFile\n      };\n    });\n\n    // Cache the result for 3 minutes (agent files change frequently)\n    serverCache.set(cacheKey, { files }, 180_000);\n\n    return NextResponse.json({\n      success: true,\n      files\n    });\n\n  } catch (error: any) {\n    console.error('Error fetching agent files:', error);\n    return NextResponse.json(\n      { success: false, error: 'Failed to fetch files' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}