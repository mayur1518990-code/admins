// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/admin/agents/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/agents">> = Specific
  const handler = {} as typeof import("../../src/app/admin/agents/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/assign/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/assign">> = Specific
  const handler = {} as typeof import("../../src/app/admin/assign/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/files/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/files">> = Specific
  const handler = {} as typeof import("../../src/app/admin/files/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/logs/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/logs">> = Specific
  const handler = {} as typeof import("../../src/app/admin/logs/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/settings">> = Specific
  const handler = {} as typeof import("../../src/app/admin/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/transactions/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/transactions">> = Specific
  const handler = {} as typeof import("../../src/app/admin/transactions/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/users/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/users">> = Specific
  const handler = {} as typeof import("../../src/app/admin/users/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/agent/files/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/agent/files/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/agent/files/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/agent/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/agent/login">> = Specific
  const handler = {} as typeof import("../../src/app/agent/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/agent/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/agent">> = Specific
  const handler = {} as typeof import("../../src/app/agent/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/agent/reply/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/agent/reply">> = Specific
  const handler = {} as typeof import("../../src/app/agent/reply/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../src/app/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/debug/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/debug">> = Specific
  const handler = {} as typeof import("../../src/app/debug/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/test/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/test">> = Specific
  const handler = {} as typeof import("../../src/app/test/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/agents/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/agents">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/agents/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/assign/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/assign">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/assign/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/auth/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/auth">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/auth/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/auto-assign/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/auto-assign">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/auto-assign/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/background-assignment/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/background-assignment">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/background-assignment/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/create-test-file/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/create-test-file">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/create-test-file/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/dashboard/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/dashboard">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/dashboard/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/files/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/files">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/files/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/fix-admin-password/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/fix-admin-password">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/fix-admin-password/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/fix-password/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/fix-password">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/fix-password/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/login/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/login">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/login/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/logout/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/logout">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/logout/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/logs/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/logs">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/logs/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/monitor-assignments/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/monitor-assignments">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/monitor-assignments/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/test-assignment/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/test-assignment">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/test-assignment/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/test-auto-assign/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/test-auto-assign">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/test-auto-assign/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/transactions/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/transactions">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/transactions/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/users/reset-password/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/users/reset-password">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/users/reset-password/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/users/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/users">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/users/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/users/update-password/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/users/update-password">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/users/update-password/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/agent/files/[fileId]/download/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/agent/files/[fileId]/download">> = Specific
  const handler = {} as typeof import("../../src/app/api/agent/files/[fileId]/download/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/agent/files/[fileId]/status/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/agent/files/[fileId]/status">> = Specific
  const handler = {} as typeof import("../../src/app/api/agent/files/[fileId]/status/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/agent/files/[fileId]/upload/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/agent/files/[fileId]/upload">> = Specific
  const handler = {} as typeof import("../../src/app/api/agent/files/[fileId]/upload/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/agent/files/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/agent/files">> = Specific
  const handler = {} as typeof import("../../src/app/api/agent/files/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/agent/login/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/agent/login">> = Specific
  const handler = {} as typeof import("../../src/app/api/agent/login/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/agent/logout/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/agent/logout">> = Specific
  const handler = {} as typeof import("../../src/app/api/agent/logout/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/agent/storage-test/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/agent/storage-test">> = Specific
  const handler = {} as typeof import("../../src/app/api/agent/storage-test/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/agents/auth/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/agents/auth">> = Specific
  const handler = {} as typeof import("../../src/app/api/agents/auth/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/agents/dashboard/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/agents/dashboard">> = Specific
  const handler = {} as typeof import("../../src/app/api/agents/dashboard/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/agents/files/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/agents/files">> = Specific
  const handler = {} as typeof import("../../src/app/api/agents/files/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/agents/respond/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/agents/respond">> = Specific
  const handler = {} as typeof import("../../src/app/api/agents/respond/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/files/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/files">> = Specific
  const handler = {} as typeof import("../../src/app/api/files/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/migrate/files/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/migrate/files">> = Specific
  const handler = {} as typeof import("../../src/app/api/migrate/files/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/replies/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/replies">> = Specific
  const handler = {} as typeof import("../../src/app/api/replies/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../src/app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
