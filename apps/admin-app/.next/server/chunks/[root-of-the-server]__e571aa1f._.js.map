{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/doc/apps/admin-app/src/lib/firebase-admin.ts"],"sourcesContent":["import { initializeApp, getApps, cert } from 'firebase-admin/app';\r\nimport { getAuth } from 'firebase-admin/auth';\r\nimport { getFirestore } from 'firebase-admin/firestore';\r\nimport { getStorage } from 'firebase-admin/storage';\r\n\r\n// Initialize Firebase Admin\r\nconst privateKey = process.env.FIREBASE_PRIVATE_KEY?.replace(/^\"|\"$/g, '') || '';\r\n\r\nconst firebaseAdminConfig = {\r\n  credential: cert({\r\n    projectId: process.env.FIREBASE_PROJECT_ID,\r\n    clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\r\n    privateKey: privateKey,\r\n  }),\r\n};\r\n\r\n// Initialize Firebase Admin\r\nconst adminApp = getApps().length === 0 ? initializeApp(firebaseAdminConfig) : getApps()[0];\r\n\r\n// Initialize Firebase Admin services\r\nexport const adminAuth = getAuth(adminApp);\r\nexport const adminDb = getFirestore(adminApp);\r\nexport const adminStorage = getStorage(adminApp);\r\n\r\nexport default adminApp;\r\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;AAEA,4BAA4B;AAC5B,MAAM,aAAa,QAAQ,GAAG,CAAC,oBAAoB,EAAE,QAAQ,UAAU,OAAO;AAE9E,MAAM,sBAAsB;IAC1B,YAAY,IAAA,wJAAI,EAAC;QACf,WAAW,QAAQ,GAAG,CAAC,mBAAmB;QAC1C,aAAa,QAAQ,GAAG,CAAC,qBAAqB;QAC9C,YAAY;IACd;AACF;AAEA,4BAA4B;AAC5B,MAAM,WAAW,IAAA,2JAAO,IAAG,MAAM,KAAK,IAAI,IAAA,iKAAa,EAAC,uBAAuB,IAAA,2JAAO,GAAE,CAAC,EAAE;AAGpF,MAAM,YAAY,IAAA,6JAAO,EAAC;AAC1B,MAAM,UAAU,IAAA,4KAAY,EAAC;AAC7B,MAAM,eAAe,IAAA,sKAAU,EAAC;uCAExB","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/doc/apps/admin-app/src/lib/get-default-agent.ts"],"sourcesContent":["import { adminDb } from './firebase-admin';\r\n\r\n/**\r\n * Get the first active agent from the database\r\n * This is used for development when we need to map to a real agent\r\n */\r\nexport async function getDefaultAgent() {\r\n  try {\r\n    const agentsSnapshot = await adminDb.collection('agents')\r\n      .where('isActive', '==', true)\r\n      .limit(1)\r\n      .get();\r\n\r\n    if (!agentsSnapshot.empty) {\r\n      const agentDoc = agentsSnapshot.docs[0];\r\n      const agentData = agentDoc.data();\r\n      \r\n      return {\r\n        agentId: agentDoc.id,\r\n        name: agentData.name || 'Unknown Agent',\r\n        email: agentData.email || 'unknown@example.com',\r\n        role: 'agent'\r\n      };\r\n    }\r\n\r\n    // Fallback to hardcoded values if no agents found\r\n    return {\r\n      agentId: \"bim290LXmEf6N7IuTzKU7bv5XcG2\",\r\n      name: \"Sunny Atul Dhore\", \r\n      email: \"dhoresunny5648@gmail.com\",\r\n      role: \"agent\"\r\n    };\r\n  } catch (error) {\r\n    console.error('Error getting default agent:', error);\r\n    // Fallback to hardcoded values\r\n    return {\r\n      agentId: \"bim290LXmEf6N7IuTzKU7bv5XcG2\",\r\n      name: \"Sunny Atul Dhore\",\r\n      email: \"dhoresunny5648@gmail.com\", \r\n      role: \"agent\"\r\n    };\r\n  }\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AAAA;;;;;;AAMO,eAAe;IACpB,IAAI;QACF,MAAM,iBAAiB,MAAM,oKAAO,CAAC,UAAU,CAAC,UAC7C,KAAK,CAAC,YAAY,MAAM,MACxB,KAAK,CAAC,GACN,GAAG;QAEN,IAAI,CAAC,eAAe,KAAK,EAAE;YACzB,MAAM,WAAW,eAAe,IAAI,CAAC,EAAE;YACvC,MAAM,YAAY,SAAS,IAAI;YAE/B,OAAO;gBACL,SAAS,SAAS,EAAE;gBACpB,MAAM,UAAU,IAAI,IAAI;gBACxB,OAAO,UAAU,KAAK,IAAI;gBAC1B,MAAM;YACR;QACF;QAEA,kDAAkD;QAClD,OAAO;YACL,SAAS;YACT,MAAM;YACN,OAAO;YACP,MAAM;QACR;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,+BAA+B;QAC/B,OAAO;YACL,SAAS;YACT,MAAM;YACN,OAAO;YACP,MAAM;QACR;IACF;AACF","debugId":null}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/doc/apps/admin-app/src/lib/agent-auth.ts"],"sourcesContent":["import { NextRequest } from \"next/server\";\nimport { cookies } from \"next/headers\";\nimport { adminAuth, adminDb } from \"./firebase-admin\";\nimport { getDefaultAgent } from \"./get-default-agent\";\n\n// Agent authentication helper that verifies against agents collection\nexport async function verifyAgentAuth() {\n  try {\n    const cookieStore = await cookies();\n    const token = cookieStore.get('agent-token')?.value;\n    \n    // For development, we'll allow access with a simple token check\n    if (token === 'dev_agent_token') {\n      // Get the first active agent from the database\n      const defaultAgent = await getDefaultAgent();\n      return defaultAgent;\n    }\n\n    if (!token) {\n      throw new Error('No agent authentication token found');\n    }\n\n    // Verify the token with Firebase Admin\n    const decodedToken = await adminAuth.verifyIdToken(token);\n    \n    // Check if this is a custom token with agent role\n    if (decodedToken.role === 'agent') {\n      return {\n        agentId: decodedToken.agentId || decodedToken.uid,\n        name: decodedToken.name || 'Agent',\n        email: decodedToken.email || 'agent@example.com',\n        role: \"agent\"\n      };\n    }\n    \n    // Get agent data from agents collection\n    const agentDoc = await adminDb.collection('agents').doc(decodedToken.uid).get();\n    \n    if (!agentDoc.exists) {\n      throw new Error('Agent not found in database');\n    }\n\n    const agentData = agentDoc.data();\n    \n    if (!agentData?.isActive) {\n      throw new Error('Agent account is deactivated');\n    }\n\n    return {\n      agentId: decodedToken.uid,\n      name: agentData.name,\n      email: agentData.email,\n      role: \"agent\"\n    };\n  } catch (error) {\n    // For development, return default agent even on error\n    const defaultAgent = await getDefaultAgent();\n    return defaultAgent;\n  }\n}\n\n// Helper function to get query parameters\nexport function getQueryParams(request: NextRequest) {\n  const { searchParams } = new URL(request.url);\n  return {\n    filter: searchParams.get('filter') || 'all',\n    dateFilter: searchParams.get('dateFilter') || 'all',\n    search: searchParams.get('search') || '',\n    limit: parseInt(searchParams.get('limit') || '50'),\n    offset: parseInt(searchParams.get('offset') || '0'),\n    status: searchParams.get('status'),\n    userId: searchParams.get('userId'),\n    fileId: searchParams.get('fileId'),\n    startDate: searchParams.get('startDate'),\n    endDate: searchParams.get('endDate')\n  };\n}"],"names":[],"mappings":";;;;;;AACA;AACA;AACA;;;;;;;;;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,cAAc,MAAM,IAAA,4IAAO;QACjC,MAAM,QAAQ,YAAY,GAAG,CAAC,gBAAgB;QAE9C,gEAAgE;QAChE,IAAI,UAAU,mBAAmB;YAC/B,+CAA+C;YAC/C,MAAM,eAAe,MAAM,IAAA,kLAAe;YAC1C,OAAO;QACT;QAEA,IAAI,CAAC,OAAO;YACV,MAAM,IAAI,MAAM;QAClB;QAEA,uCAAuC;QACvC,MAAM,eAAe,MAAM,sKAAS,CAAC,aAAa,CAAC;QAEnD,kDAAkD;QAClD,IAAI,aAAa,IAAI,KAAK,SAAS;YACjC,OAAO;gBACL,SAAS,aAAa,OAAO,IAAI,aAAa,GAAG;gBACjD,MAAM,aAAa,IAAI,IAAI;gBAC3B,OAAO,aAAa,KAAK,IAAI;gBAC7B,MAAM;YACR;QACF;QAEA,wCAAwC;QACxC,MAAM,WAAW,MAAM,oKAAO,CAAC,UAAU,CAAC,UAAU,GAAG,CAAC,aAAa,GAAG,EAAE,GAAG;QAE7E,IAAI,CAAC,SAAS,MAAM,EAAE;YACpB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,YAAY,SAAS,IAAI;QAE/B,IAAI,CAAC,WAAW,UAAU;YACxB,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO;YACL,SAAS,aAAa,GAAG;YACzB,MAAM,UAAU,IAAI;YACpB,OAAO,UAAU,KAAK;YACtB,MAAM;QACR;IACF,EAAE,OAAO,OAAO;QACd,sDAAsD;QACtD,MAAM,eAAe,MAAM,IAAA,kLAAe;QAC1C,OAAO;IACT;AACF;AAGO,SAAS,eAAe,OAAoB;IACjD,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;IAC5C,OAAO;QACL,QAAQ,aAAa,GAAG,CAAC,aAAa;QACtC,YAAY,aAAa,GAAG,CAAC,iBAAiB;QAC9C,QAAQ,aAAa,GAAG,CAAC,aAAa;QACtC,OAAO,SAAS,aAAa,GAAG,CAAC,YAAY;QAC7C,QAAQ,SAAS,aAAa,GAAG,CAAC,aAAa;QAC/C,QAAQ,aAAa,GAAG,CAAC;QACzB,QAAQ,aAAa,GAAG,CAAC;QACzB,QAAQ,aAAa,GAAG,CAAC;QACzB,WAAW,aAAa,GAAG,CAAC;QAC5B,SAAS,aAAa,GAAG,CAAC;IAC5B;AACF","debugId":null}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/doc/apps/admin-app/src/app/api/agent/files/%5BfileId%5D/status/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { adminDb } from '@/lib/firebase-admin';\nimport { verifyAgentAuth } from '@/lib/agent-auth';\n\nexport async function PATCH(\n  request: NextRequest,\n  { params }: { params: Promise<{ fileId: string }> }\n) {\n  try {\n    // Verify agent authentication\n    const agent = await verifyAgentAuth();\n    if (!agent) {\n      return NextResponse.json({ success: false, error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const { fileId } = await params;\n    const { status } = await request.json();\n\n    if (!status || !['processing', 'completed'].includes(status)) {\n      return NextResponse.json({\n        success: false,\n        error: 'Invalid status. Must be \"processing\" or \"completed\"'\n      }, { status: 400 });\n    }\n\n    // Verify the file is assigned to this agent\n    const fileDoc = await adminDb.collection('files').doc(fileId).get();\n    if (!fileDoc.exists) {\n      return NextResponse.json({\n        success: false,\n        error: 'File not found'\n      }, { status: 404 });\n    }\n\n    const fileData = fileDoc.data();\n    if (fileData?.assignedAgentId !== agent.agentId) {\n      return NextResponse.json({\n        success: false,\n        error: 'File not assigned to you'\n      }, { status: 403 });\n    }\n\n    // Update file status\n    const updateData: any = {\n      status,\n      updatedAt: new Date()\n    };\n\n    if (status === 'processing') {\n      updateData.processingStartedAt = new Date();\n    } else if (status === 'completed') {\n      updateData.completedAt = new Date();\n    }\n\n    await adminDb.collection('files').doc(fileId).update(updateData);\n\n    // Log the status change\n    await adminDb.collection('logs').add({\n      action: 'file_status_updated',\n      agentId: agent.agentId,\n      agentName: agent.name,\n      fileId,\n      oldStatus: fileData.status,\n      newStatus: status,\n      timestamp: new Date()\n    });\n\n    return NextResponse.json({\n      success: true,\n      message: `File status updated to ${status}`,\n      status\n    });\n\n  } catch (error: any) {\n    console.error('Error updating file status:', error);\n    return NextResponse.json(\n      { success: false, error: 'Failed to update file status' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;;;;AAEO,eAAe,MACpB,OAAoB,EACpB,EAAE,MAAM,EAA2C;IAEnD,IAAI;QACF,8BAA8B;QAC9B,MAAM,QAAQ,MAAM,IAAA,wKAAe;QACnC,IAAI,CAAC,OAAO;YACV,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAO,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpF;QAEA,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM;QACzB,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,QAAQ,IAAI;QAErC,IAAI,CAAC,UAAU,CAAC;YAAC;YAAc;SAAY,CAAC,QAAQ,CAAC,SAAS;YAC5D,OAAO,gJAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,OAAO;YACT,GAAG;gBAAE,QAAQ;YAAI;QACnB;QAEA,4CAA4C;QAC5C,MAAM,UAAU,MAAM,oKAAO,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC,QAAQ,GAAG;QACjE,IAAI,CAAC,QAAQ,MAAM,EAAE;YACnB,OAAO,gJAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,OAAO;YACT,GAAG;gBAAE,QAAQ;YAAI;QACnB;QAEA,MAAM,WAAW,QAAQ,IAAI;QAC7B,IAAI,UAAU,oBAAoB,MAAM,OAAO,EAAE;YAC/C,OAAO,gJAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,OAAO;YACT,GAAG;gBAAE,QAAQ;YAAI;QACnB;QAEA,qBAAqB;QACrB,MAAM,aAAkB;YACtB;YACA,WAAW,IAAI;QACjB;QAEA,IAAI,WAAW,cAAc;YAC3B,WAAW,mBAAmB,GAAG,IAAI;QACvC,OAAO,IAAI,WAAW,aAAa;YACjC,WAAW,WAAW,GAAG,IAAI;QAC/B;QAEA,MAAM,oKAAO,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC,QAAQ,MAAM,CAAC;QAErD,wBAAwB;QACxB,MAAM,oKAAO,CAAC,UAAU,CAAC,QAAQ,GAAG,CAAC;YACnC,QAAQ;YACR,SAAS,MAAM,OAAO;YACtB,WAAW,MAAM,IAAI;YACrB;YACA,WAAW,SAAS,MAAM;YAC1B,WAAW;YACX,WAAW,IAAI;QACjB;QAEA,OAAO,gJAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,SAAS,CAAC,uBAAuB,EAAE,QAAQ;YAC3C;QACF;IAEF,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,OAAO;QAA+B,GACxD;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}