{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/hosting%20admin/apps/admin-app/src/lib/cache.ts"],"sourcesContent":["type CacheEntry<T> = { data: T; timestamp: number };\n\nconst memoryCache = new Map<string, CacheEntry<any>>();\n\nexport function getCached<T>(key: string): CacheEntry<T> | undefined {\n  return memoryCache.get(key);\n}\n\nexport function setCached<T>(key: string, data: T): void {\n  memoryCache.set(key, { data, timestamp: Date.now() });\n}\n\nexport function getCacheKey(parts: Array<string | number | boolean | null | undefined>): string {\n  return parts.filter((p) => p !== undefined && p !== null).join(\":\");\n}\n\nexport function isFresh(entry: CacheEntry<any> | undefined, ttlMs: number): boolean {\n  if (!entry) return false;\n  return Date.now() - entry.timestamp < ttlMs;\n}\n\nexport function deleteCached(key: string): void {\n  memoryCache.delete(key);\n}\n\n\n"],"names":[],"mappings":";;;;;;;;;;;;AAEA,MAAM,cAAc,IAAI;AAEjB,SAAS,UAAa,GAAW;IACtC,OAAO,YAAY,GAAG,CAAC;AACzB;AAEO,SAAS,UAAa,GAAW,EAAE,IAAO;IAC/C,YAAY,GAAG,CAAC,KAAK;QAAE;QAAM,WAAW,KAAK,GAAG;IAAG;AACrD;AAEO,SAAS,YAAY,KAA0D;IACpF,OAAO,MAAM,MAAM,CAAC,CAAC,IAAM,MAAM,aAAa,MAAM,MAAM,IAAI,CAAC;AACjE;AAEO,SAAS,QAAQ,KAAkC,EAAE,KAAa;IACvE,IAAI,CAAC,OAAO,OAAO;IACnB,OAAO,KAAK,GAAG,KAAK,MAAM,SAAS,GAAG;AACxC;AAEO,SAAS,aAAa,GAAW;IACtC,YAAY,MAAM,CAAC;AACrB","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/hosting%20admin/apps/admin-app/src/app/admin/transactions/page.tsx"],"sourcesContent":["\"use client\";\n\nimport dynamic from \"next/dynamic\";\nconst Sidebar = dynamic(() => import(\"@/components/AdminSidebar\").then(m => m.Sidebar), { ssr: false });\nimport { useState, useEffect, useCallback, useRef, useMemo } from \"react\";\nimport { getCached, setCached, getCacheKey, isFresh } from \"@/lib/cache\";\n\ninterface Transaction {\n  id: string;\n  userId: string;\n  fileId: string;\n  razorpayOrderId: string;\n  razorpayPaymentId: string;\n  amount: number;\n  currency: string;\n  status: string;\n  createdAt: string;\n  user: {\n    id: string;\n    name: string;\n    email: string;\n  };\n  file: {\n    id: string;\n    originalName: string;\n    filename: string;\n  };\n}\n\ninterface TransactionStats {\n  totalTransactions: number;\n  successfulTransactions: number;\n  failedTransactions: number;\n  totalRevenue: number;\n  averageTransactionValue: number;\n  successRate: number;\n}\n\nexport default function TransactionsPage() {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [stats, setStats] = useState<TransactionStats | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [filter, setFilter] = useState<\"all\" | \"successful\" | \"failed\" | \"pending\">(\"all\");\n  const [dateFilter, setDateFilter] = useState<\"all\" | \"today\" | \"week\" | \"month\">(\"all\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [debouncedSearch, setDebouncedSearch] = useState(\"\");\n  const [showExportModal, setShowExportModal] = useState(false);\n  const [exportFormat, setExportFormat] = useState<\"csv\" | \"pdf\">(\"csv\");\n  const [selectedTransactions, setSelectedTransactions] = useState<string[]>([]);\n\n  // Debounce search term to avoid excessive API calls\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedSearch(searchTerm);\n    }, 500); // 500ms debounce\n    return () => clearTimeout(timer);\n  }, [searchTerm]);\n\n  const isLoadingRef = useRef(false);\n  const loadTransactions = useCallback(async () => {\n    if (isLoadingRef.current) return;\n    isLoadingRef.current = true;\n    \n    try {\n      setIsLoading(true);\n      setError(\"\");\n      \n      // Build query parameters\n      const params = new URLSearchParams();\n      \n      // Map frontend filters to backend status values\n      if (filter !== 'all') {\n        if (filter === 'successful') {\n          params.append('status', 'captured');\n        } else {\n          params.append('status', filter);\n        }\n      }\n      \n      // Add date filtering\n      if (dateFilter !== 'all') {\n        const now = new Date();\n        let startDate: Date | null = null;\n        \n        switch (dateFilter) {\n          case 'today':\n            startDate = new Date(now.setHours(0, 0, 0, 0));\n            break;\n          case 'week':\n            startDate = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n            break;\n          case 'month':\n            startDate = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\n            break;\n        }\n        \n        if (startDate) {\n          params.append('startDate', startDate.toISOString());\n        }\n      }\n      \n      // Add search parameter (server-side filtering) using debounced value\n      if (debouncedSearch.trim()) {\n        params.append('search', debouncedSearch.trim());\n      }\n\n      // Force fresh results to avoid stale cache after new payments\n      params.append('fresh', '1');\n      \n      // Cache key includes all parameters\n      const ttlMs = 2 * 60 * 1000; // 2 minute TTL\n      const cacheKey = getCacheKey(['admin-transactions', filter, dateFilter, debouncedSearch]);\n      const cached = getCached<{ transactions: Transaction[]; stats: TransactionStats }>(cacheKey);\n      \n      if (isFresh(cached, ttlMs)) {\n        setTransactions(cached!.data.transactions);\n        setStats(cached!.data.stats);\n        setIsLoading(false);\n        isLoadingRef.current = false;\n        return;\n      }\n\n      // Fetch with timeout\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 20000);\n      \n      try {\n        const response = await fetch(`/api/admin/transactions?${params}`, { \n          signal: controller.signal \n        });\n        clearTimeout(timeoutId);\n        \n        const result = await response.json();\n        \n        if (!result.success) {\n          throw new Error(result.message || 'Failed to load transactions');\n        }\n        \n        // Update state with results\n        setTransactions(result.transactions || []);\n        setStats(result.stats || null);\n        \n        // Cache the results\n        setCached(cacheKey, { \n          transactions: result.transactions || [], \n          stats: result.stats || null \n        });\n      } catch (fetchError: any) {\n        if (fetchError.name === 'AbortError') {\n          throw new Error('Request timeout - please try again');\n        }\n        throw fetchError;\n      }\n    } catch (error: any) {\n      console.error('Error loading transactions:', error);\n      setError(error.message || 'Failed to load transactions');\n    } finally {\n      setIsLoading(false);\n      isLoadingRef.current = false;\n    }\n  }, [filter, dateFilter, debouncedSearch]);\n\n  useEffect(() => {\n    loadTransactions();\n  }, [loadTransactions]);\n\n  const toggleTransactionSelection = useCallback((id: string) => {\n    setSelectedTransactions(prev => prev.includes(id) ? prev.filter(x => x !== id) : [...prev, id]);\n  }, []);\n\n  const allSelected = useMemo(\n    () => selectedTransactions.length > 0 && transactions.every(t => selectedTransactions.includes(t.id)),\n    [selectedTransactions, transactions]\n  );\n\n  const toggleSelectAll = useCallback(() => {\n    if (allSelected) setSelectedTransactions([]);\n    else setSelectedTransactions(transactions.map(t => t.id));\n  }, [allSelected, transactions]);\n\n  const handleDeleteSelected = useCallback(async () => {\n    if (selectedTransactions.length === 0) return;\n    const confirmed = window.confirm(`Delete ${selectedTransactions.length} selected transaction(s)? This cannot be undone.`);\n    if (!confirmed) return;\n    try {\n      const prev = transactions;\n      setTransactions(prev.filter(t => !selectedTransactions.includes(t.id)));\n      const response = await fetch('/api/admin/transactions', {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ transactionIds: selectedTransactions })\n      });\n      const result = await response.json();\n      if (!result.success) {\n        setTransactions(prev);\n        throw new Error(result.message || 'Failed to delete selected transactions');\n      }\n      // Clear any client-side cache so reload pulls fresh data\n      const cacheKey = getCacheKey(['admin-transactions', filter, dateFilter, debouncedSearch]);\n      setCached(cacheKey, { transactions: [], stats: null as any });\n      setSelectedTransactions([]);\n      await loadTransactions();\n      alert(result.message || 'Deleted selected transactions');\n    } catch (e: any) {\n      setError(e.message || 'Failed to delete selected transactions');\n    }\n  }, [selectedTransactions, transactions, loadTransactions]);\n\n  const handleExport = async () => {\n    try {\n      const params = new URLSearchParams({\n        format: exportFormat,\n        filter,\n        dateFilter,\n        search: searchTerm\n      });\n      \n      const response = await fetch(`/api/admin/transactions/export?${params}`);\n      \n      if (!response.ok) {\n        throw new Error('Export failed');\n      }\n      \n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `transactions-${new Date().toISOString().split('T')[0]}.${exportFormat}`;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n      \n      setShowExportModal(false);\n    } catch (error: any) {\n      console.error('Error exporting transactions:', error);\n      setError(error.message || 'Failed to export transactions');\n    }\n  };\n\n  // Server-side filtering is now handled by the API, no need for client-side filtering\n  // const filteredTransactions = transactions; // Not needed anymore, use transactions directly\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n      minimumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'captured': // Backend returns 'captured' not 'successful'\n      case 'successful':\n        return 'bg-green-100 text-green-800';\n      case 'failed':\n        return 'bg-red-100 text-red-800';\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'refunded':\n        return 'bg-orange-100 text-orange-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex\">\n        <Sidebar />\n        <main className=\"flex-1 p-6\">\n          <div className=\"max-w-7xl mx-auto\">\n            <div className=\"animate-pulse\">\n              <div className=\"h-8 bg-gray-200 rounded w-48 mb-6\"></div>\n              <div className=\"bg-white rounded-lg shadow-md p-6\">\n                <div className=\"space-y-4\">\n                  {[1, 2, 3].map((i) => (\n                    <div key={i} className=\"h-16 bg-gray-200 rounded\"></div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex\">\n      <Sidebar />\n      <main className=\"flex-1 p-6\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <h1 className=\"text-3xl font-bold text-gray-900\">\n              Transaction History\n            </h1>\n            <button\n              onClick={() => setShowExportModal(true)}\n              className=\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors\"\n            >\n              Export Data\n            </button>\n          </div>\n\n          {/* Top actions row */}\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"text-sm text-gray-600\">\n              Selected: {selectedTransactions.length}\n            </div>\n            <div className=\"flex space-x-2\">\n              <button\n                onClick={handleDeleteSelected}\n                disabled={selectedTransactions.length === 0}\n                className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors disabled:bg-gray-400 disabled:cursor-not-allowed\"\n              >\n                Delete Selected ({selectedTransactions.length})\n              </button>\n            </div>\n          </div>\n\n          {error && (\n            <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\n              <div className=\"flex items-center\">\n                <svg className=\"w-5 h-5 text-red-400 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                <span className=\"text-red-800\">{error}</span>\n              </div>\n            </div>\n          )}\n\n          {/* Stats Cards */}\n          {stats && (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-6\">\n              <div className=\"bg-white rounded-lg shadow-md p-6\">\n                <div className=\"flex items-center\">\n                  <div className=\"flex-shrink-0\">\n                    <div className=\"w-8 h-8 bg-blue-500 rounded-lg flex items-center justify-center\">\n                      <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n                      </svg>\n                    </div>\n                  </div>\n                  <div className=\"ml-4\">\n                    <p className=\"text-sm font-medium text-gray-500\">Total Transactions</p>\n                    <p className=\"text-2xl font-bold text-gray-900\">{stats.totalTransactions}</p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-white rounded-lg shadow-md p-6\">\n                <div className=\"flex items-center\">\n                  <div className=\"flex-shrink-0\">\n                    <div className=\"w-8 h-8 bg-green-500 rounded-lg flex items-center justify-center\">\n                      <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </div>\n                  </div>\n                  <div className=\"ml-4\">\n                    <p className=\"text-sm font-medium text-gray-500\">Successful</p>\n                    <p className=\"text-2xl font-bold text-gray-900\">{stats.successfulTransactions}</p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-white rounded-lg shadow-md p-6\">\n                <div className=\"flex items-center\">\n                  <div className=\"flex-shrink-0\">\n                    <div className=\"w-8 h-8 bg-yellow-500 rounded-lg flex items-center justify-center\">\n                      <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\" />\n                      </svg>\n                    </div>\n                  </div>\n                  <div className=\"ml-4\">\n                    <p className=\"text-sm font-medium text-gray-500\">Total Revenue</p>\n                    <p className=\"text-2xl font-bold text-gray-900\">{formatCurrency(stats.totalRevenue)}</p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-white rounded-lg shadow-md p-6\">\n                <div className=\"flex items-center\">\n                  <div className=\"flex-shrink-0\">\n                    <div className=\"w-8 h-8 bg-purple-500 rounded-lg flex items-center justify-center\">\n                      <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                      </svg>\n                    </div>\n                  </div>\n                  <div className=\"ml-4\">\n                    <p className=\"text-sm font-medium text-gray-500\">Success Rate</p>\n                    <p className=\"text-2xl font-bold text-gray-900\">{stats.successRate.toFixed(1)}%</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Filters and Search */}\n          <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n            <div className=\"flex flex-col lg:flex-row gap-4\">\n              <div className=\"flex flex-wrap gap-2\">\n                {[\n                  { key: \"all\", label: \"All Transactions\" },\n                  { key: \"successful\", label: \"Successful\" },\n                  { key: \"failed\", label: \"Failed\" },\n                  { key: \"pending\", label: \"Pending\" },\n                ].map((filterOption) => (\n                  <button\n                    key={filterOption.key}\n                    onClick={() => setFilter(filterOption.key as any)}\n                    className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n                      filter === filterOption.key\n                        ? \"bg-blue-100 text-blue-700\"\n                        : \"text-gray-600 hover:text-gray-900 hover:bg-gray-100\"\n                    }`}\n                  >\n                    {filterOption.label}\n                  </button>\n                ))}\n              </div>\n              \n              <div className=\"flex flex-wrap gap-2\">\n                {[\n                  { key: \"all\", label: \"All Time\" },\n                  { key: \"today\", label: \"Today\" },\n                  { key: \"week\", label: \"This Week\" },\n                  { key: \"month\", label: \"This Month\" },\n                ].map((dateOption) => (\n                  <button\n                    key={dateOption.key}\n                    onClick={() => setDateFilter(dateOption.key as any)}\n                    className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n                      dateFilter === dateOption.key\n                        ? \"bg-green-100 text-green-700\"\n                        : \"text-gray-600 hover:text-gray-900 hover:bg-gray-100\"\n                    }`}\n                  >\n                    {dateOption.label}\n                  </button>\n                ))}\n              </div>\n              \n              <div className=\"flex-1\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Search transactions... (auto-search after typing)\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Transactions List */}\n          <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      <input\n                        type=\"checkbox\"\n                        checked={allSelected}\n                        onChange={toggleSelectAll}\n                        className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                      />\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Transaction ID\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      User\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      File\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Amount\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Status\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Date\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Payment ID\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {transactions.map((transaction) => (\n                    <tr key={transaction.id} className=\"hover:bg-gray-50\">\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <input\n                          type=\"checkbox\"\n                          checked={selectedTransactions.includes(transaction.id)}\n                          onChange={() => toggleTransactionSelection(transaction.id)}\n                          className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                        />\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm font-medium text-gray-900\">\n                          {transaction.razorpayOrderId}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm text-gray-900\">\n                          {transaction.user?.name || 'Unknown User'}\n                        </div>\n                        <div className=\"text-sm text-gray-500\">\n                          {transaction.user?.email || 'No email'}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm text-gray-900\">\n                          {transaction.file?.originalName || 'Unknown File'}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm font-medium text-gray-900\">\n                          {formatCurrency(transaction.amount)}\n                        </div>\n                        <div className=\"text-sm text-gray-500\">\n                          {transaction.currency?.toUpperCase() || 'INR'}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(transaction.status || 'unknown')}`}>\n                          {(transaction.status || 'unknown').toUpperCase()}\n                        </span>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm text-gray-900\">\n                          {transaction.createdAt ? new Date(transaction.createdAt).toLocaleDateString() : 'Unknown Date'}\n                        </div>\n                        <div className=\"text-sm text-gray-500\">\n                          {transaction.createdAt ? new Date(transaction.createdAt).toLocaleTimeString() : 'Unknown Time'}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm text-gray-900 font-mono\">\n                          {transaction.razorpayPaymentId || 'No Payment ID'}\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          \n\n          {transactions.length === 0 && !isLoading && (\n            <div className=\"bg-white rounded-lg shadow-md p-8 text-center mt-6\">\n              <svg className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n              </svg>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No transactions found</h3>\n              <p className=\"text-gray-500 mb-4\">\n                {searchTerm ? 'Try adjusting your search criteria' : 'No transactions have been recorded yet'}\n              </p>\n            </div>\n          )}\n        </div>\n      </main>\n\n      {/* Export Modal */}\n      {showExportModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Export Transactions</h2>\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Export Format\n                </label>\n                <select\n                  value={exportFormat}\n                  onChange={(e) => setExportFormat(e.target.value as any)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                >\n                  <option value=\"csv\">CSV</option>\n                  <option value=\"pdf\">PDF</option>\n                </select>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-600\">\n                  Export will include all transactions matching current filters\n                </p>\n              </div>\n            </div>\n            <div className=\"flex justify-end space-x-3 mt-6\">\n              <button\n                type=\"button\"\n                onClick={() => setShowExportModal(false)}\n                className=\"px-4 py-2 text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 transition-colors\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleExport}\n                className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors\"\n              >\n                Export\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1366, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/hosting%20admin/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1371, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/hosting%20admin/node_modules/%40swc/helpers/cjs/_interop_require_default.cjs"],"sourcesContent":["\"use strict\";\n\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nexports._ = _interop_require_default;\n"],"names":[],"mappings":"AAEA,SAAS,yBAAyB,GAAG;IACjC,OAAO,OAAO,IAAI,UAAU,GAAG,MAAM;QAAE,SAAS;IAAI;AACxD;AACA,QAAQ,CAAC,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1381, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/hosting%20admin/node_modules/next/src/shared/lib/lazy-dynamic/bailout-to-csr.ts"],"sourcesContent":["// This has to be a shared module which is shared between client component error boundary and dynamic component\nconst BAILOUT_TO_CSR = 'BAILOUT_TO_CLIENT_SIDE_RENDERING'\n\n/** An error that should be thrown when we want to bail out to client-side rendering. */\nexport class BailoutToCSRError extends Error {\n  public readonly digest = BAILOUT_TO_CSR\n\n  constructor(public readonly reason: string) {\n    super(`Bail out to client-side rendering: ${reason}`)\n  }\n}\n\n/** Checks if a passed argument is an error that is thrown if we want to bail out to client-side rendering. */\nexport function isBailoutToCSRError(err: unknown): err is BailoutToCSRError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === BAILOUT_TO_CSR\n}\n"],"names":["BailoutToCSRError","isBailoutToCSRError","BAILOUT_TO_CSR","Error","constructor","reason","digest","err"],"mappings":"AAAA,+GAA+G;;;;;;;;;;;;;;;IAIlGA,iBAAiB,EAAA;eAAjBA;;IASGC,mBAAmB,EAAA;eAAnBA;;;AAZhB,MAAMC,iBAAiB;AAGhB,MAAMF,0BAA0BG;IAGrCC,YAA4BC,MAAc,CAAE;QAC1C,KAAK,CAAE,wCAAqCA,SAAAA,IAAAA,CADlBA,MAAAA,GAAAA,QAAAA,IAAAA,CAFZC,MAAAA,GAASJ;IAIzB;AACF;AAGO,SAASD,oBAAoBM,GAAY;IAC9C,IAAI,OAAOA,QAAQ,YAAYA,QAAQ,QAAQ,CAAE,CAAA,YAAYA,GAAE,GAAI;QACjE,OAAO;IACT;IAEA,OAAOA,IAAID,MAAM,KAAKJ;AACxB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1419, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/hosting%20admin/node_modules/next/src/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.tsx"],"sourcesContent":["'use client'\n\nimport type { ReactElement } from 'react'\nimport { BailoutToCSRError } from './bailout-to-csr'\n\ninterface BailoutToCSRProps {\n  reason: string\n  children: ReactElement\n}\n\n/**\n * If rendered on the server, this component throws an error\n * to signal Next.js that it should bail out to client-side rendering instead.\n */\nexport function BailoutToCSR({ reason, children }: BailoutToCSRProps) {\n  if (typeof window === 'undefined') {\n    throw new BailoutToCSRError(reason)\n  }\n\n  return children\n}\n"],"names":["BailoutToCSR","reason","children","window","BailoutToCSRError"],"mappings":";;;+BAcgBA,gBAAAA;;;eAAAA;;;8BAXkB;AAW3B,SAASA,aAAa,KAAuC;IAAvC,IAAA,EAAEC,MAAM,EAAEC,QAAQ,EAAqB,GAAvC;IAC3B,IAAI,OAAOC,WAAW,kBAAa;QACjC,MAAM,OAAA,cAA6B,CAA7B,IAAIC,cAAAA,iBAAiB,CAACH,SAAtB,qBAAA;mBAAA;wBAAA;0BAAA;QAA4B;IACpC;IAEA,OAAOC;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1444, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/hosting%20admin/node_modules/next/src/shared/lib/encode-uri-path.ts"],"sourcesContent":["export function encodeURIPath(file: string) {\n  return file\n    .split('/')\n    .map((p) => encodeURIComponent(p))\n    .join('/')\n}\n"],"names":["encodeURIPath","file","split","map","p","encodeURIComponent","join"],"mappings":";;;+BAAgBA,iBAAAA;;;eAAAA;;;AAAT,SAASA,cAAcC,IAAY;IACxC,OAAOA,KACJC,KAAK,CAAC,KACNC,GAAG,CAAC,CAACC,IAAMC,mBAAmBD,IAC9BE,IAAI,CAAC;AACV","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1460, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/hosting%20admin/node_modules/next/src/shared/lib/lazy-dynamic/preload-chunks.tsx"],"sourcesContent":["'use client'\n\nimport { preload } from 'react-dom'\n\nimport { workAsyncStorage } from '../../../server/app-render/work-async-storage.external'\nimport { encodeURIPath } from '../encode-uri-path'\n\nexport function PreloadChunks({\n  moduleIds,\n}: {\n  moduleIds: string[] | undefined\n}) {\n  // Early return in client compilation and only load requestStore on server side\n  if (typeof window !== 'undefined') {\n    return null\n  }\n\n  const workStore = workAsyncStorage.getStore()\n  if (workStore === undefined) {\n    return null\n  }\n\n  const allFiles = []\n\n  // Search the current dynamic call unique key id in react loadable manifest,\n  // and find the corresponding CSS files to preload\n  if (workStore.reactLoadableManifest && moduleIds) {\n    const manifest = workStore.reactLoadableManifest\n    for (const key of moduleIds) {\n      if (!manifest[key]) continue\n      const chunks = manifest[key].files\n      allFiles.push(...chunks)\n    }\n  }\n\n  if (allFiles.length === 0) {\n    return null\n  }\n\n  const dplId = process.env.NEXT_DEPLOYMENT_ID\n    ? `?dpl=${process.env.NEXT_DEPLOYMENT_ID}`\n    : ''\n\n  return (\n    <>\n      {allFiles.map((chunk) => {\n        const href = `${workStore.assetPrefix}/_next/${encodeURIPath(chunk)}${dplId}`\n        const isCss = chunk.endsWith('.css')\n        // If it's stylesheet we use `precedence` o help hoist with React Float.\n        // For stylesheets we actually need to render the CSS because nothing else is going to do it so it needs to be part of the component tree.\n        // The `preload` for stylesheet is not optional.\n        if (isCss) {\n          return (\n            <link\n              key={chunk}\n              // @ts-ignore\n              precedence=\"dynamic\"\n              href={href}\n              rel=\"stylesheet\"\n              as=\"style\"\n            />\n          )\n        } else {\n          // If it's script we use ReactDOM.preload to preload the resources\n          preload(href, {\n            as: 'script',\n            fetchPriority: 'low',\n          })\n          return null\n        }\n      })}\n    </>\n  )\n}\n"],"names":["PreloadChunks","moduleIds","window","workStore","workAsyncStorage","getStore","undefined","allFiles","reactLoadableManifest","manifest","key","chunks","files","push","length","dplId","process","env","NEXT_DEPLOYMENT_ID","map","chunk","href","assetPrefix","encodeURIPath","isCss","endsWith","link","precedence","rel","as","preload","fetchPriority"],"mappings":";;;+BAOgBA,iBAAAA;;;eAAAA;;;;0BALQ;0CAES;+BACH;AAEvB,SAASA,cAAc,KAI7B;IAJ6B,IAAA,EAC5BC,SAAS,EAGV,GAJ6B;IAK5B,+EAA+E;IAC/E,IAAI,OAAOC,WAAW,aAAa;;IAInC,MAAMC,YAAYC,0BAAAA,gBAAgB,CAACC,QAAQ;IAC3C,IAAIF,cAAcG,WAAW;QAC3B,OAAO;IACT;IAEA,MAAMC,WAAW,EAAE;IAEnB,4EAA4E;IAC5E,kDAAkD;IAClD,IAAIJ,UAAUK,qBAAqB,IAAIP,WAAW;QAChD,MAAMQ,WAAWN,UAAUK,qBAAqB;QAChD,KAAK,MAAME,OAAOT,UAAW;YAC3B,IAAI,CAACQ,QAAQ,CAACC,IAAI,EAAE;YACpB,MAAMC,SAASF,QAAQ,CAACC,IAAI,CAACE,KAAK;YAClCL,SAASM,IAAI,IAAIF;QACnB;IACF;IAEA,IAAIJ,SAASO,MAAM,KAAK,GAAG;QACzB,OAAO;IACT;IAEA,MAAMC,QAAQC,QAAQC,GAAG,CAACC,kBAAkB,QACvC,UAAOF,QAAQC,GAAG,CAACC,IACpB,cADsC;IAG1C,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAAA,YAAA,QAAA,EAAA;kBACGX,SAASY,GAAG,CAAC,CAACC;YACb,MAAMC,OAAUlB,UAAUmB,WAAW,GAAC,YAASC,CAAAA,GAAAA,eAAAA,aAAa,EAACH,SAASL;YACtE,MAAMS,QAAQJ,MAAMK,QAAQ,CAAC;YAC7B,wEAAwE;YACxE,0IAA0I;YAC1I,gDAAgD;YAChD,IAAID,OAAO;gBACT,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAACE,QAAAA;oBAEC,aAAa;oBACbC,YAAW;oBACXN,MAAMA;oBACNO,KAAI;oBACJC,IAAG;mBALET;YAQX,OAAO;gBACL,kEAAkE;gBAClEU,CAAAA,GAAAA,UAAAA,OAAO,EAACT,MAAM;oBACZQ,IAAI;oBACJE,eAAe;gBACjB;gBACA,OAAO;YACT;QACF;;AAGN","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1527, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/hosting%20admin/node_modules/next/src/shared/lib/lazy-dynamic/loadable.tsx"],"sourcesContent":["import { Suspense, Fragment, lazy } from 'react'\nimport { BailoutToCSR } from './dynamic-bailout-to-csr'\nimport type { ComponentModule } from './types'\nimport { PreloadChunks } from './preload-chunks'\n\n// Normalize loader to return the module as form { default: Component } for `React.lazy`.\n// Also for backward compatible since next/dynamic allows to resolve a component directly with loader\n// Client component reference proxy need to be converted to a module.\nfunction convertModule<P>(\n  mod: React.ComponentType<P> | ComponentModule<P> | undefined\n): {\n  default: React.ComponentType<P>\n} {\n  // Check \"default\" prop before accessing it, as it could be client reference proxy that could break it reference.\n  // Cases:\n  // mod: { default: Component }\n  // mod: Component\n  // mod: { default: proxy(Component) }\n  // mod: proxy(Component)\n  const hasDefault = mod && 'default' in mod\n  return {\n    default: hasDefault\n      ? (mod as ComponentModule<P>).default\n      : (mod as React.ComponentType<P>),\n  }\n}\n\nconst defaultOptions = {\n  loader: () => Promise.resolve(convertModule(() => null)),\n  loading: null,\n  ssr: true,\n}\n\ninterface LoadableOptions {\n  loader?: () => Promise<React.ComponentType<any> | ComponentModule<any>>\n  loading?: React.ComponentType<any> | null\n  ssr?: boolean\n  modules?: string[]\n}\n\nfunction Loadable(options: LoadableOptions) {\n  const opts = { ...defaultOptions, ...options }\n  const Lazy = lazy(() => opts.loader().then(convertModule))\n  const Loading = opts.loading\n\n  function LoadableComponent(props: any) {\n    const fallbackElement = Loading ? (\n      <Loading isLoading={true} pastDelay={true} error={null} />\n    ) : null\n\n    // If it's non-SSR or provided a loading component, wrap it in a suspense boundary\n    const hasSuspenseBoundary = !opts.ssr || !!opts.loading\n    const Wrap = hasSuspenseBoundary ? Suspense : Fragment\n    const wrapProps = hasSuspenseBoundary ? { fallback: fallbackElement } : {}\n    const children = opts.ssr ? (\n      <>\n        {/* During SSR, we need to preload the CSS from the dynamic component to avoid flash of unstyled content */}\n        {typeof window === 'undefined' ? (\n          <PreloadChunks moduleIds={opts.modules} />\n        ) : null}\n        <Lazy {...props} />\n      </>\n    ) : (\n      <BailoutToCSR reason=\"next/dynamic\">\n        <Lazy {...props} />\n      </BailoutToCSR>\n    )\n\n    return <Wrap {...wrapProps}>{children}</Wrap>\n  }\n\n  LoadableComponent.displayName = 'LoadableComponent'\n\n  return LoadableComponent\n}\n\nexport default Loadable\n"],"names":["convertModule","mod","hasDefault","default","defaultOptions","loader","Promise","resolve","loading","ssr","Loadable","options","opts","Lazy","lazy","then","Loading","LoadableComponent","props","fallbackElement","isLoading","pastDelay","error","hasSuspenseBoundary","Wrap","Suspense","Fragment","wrapProps","fallback","children","window","PreloadChunks","moduleIds","modules","BailoutToCSR","reason","displayName"],"mappings":";;;+BA4EA,WAAA;;;eAAA;;;;uBA5EyC;qCACZ;+BAEC;AAE9B,yFAAyF;AACzF,qGAAqG;AACrG,qEAAqE;AACrE,SAASA,cACPC,GAA4D;IAI5D,iHAAiH;IACjH,SAAS;IACT,8BAA8B;IAC9B,iBAAiB;IACjB,qCAAqC;IACrC,wBAAwB;IACxB,MAAMC,aAAaD,OAAO,aAAaA;IACvC,OAAO;QACLE,SAASD,aACJD,IAA2BE,OAAO,GAClCF;IACP;AACF;AAEA,MAAMG,iBAAiB;IACrBC,QAAQ,IAAMC,QAAQC,OAAO,CAACP,cAAc,IAAM;IAClDQ,SAAS;IACTC,KAAK;AACP;AASA,SAASC,SAASC,OAAwB;IACxC,MAAMC,OAAO;QAAE,GAAGR,cAAc;QAAE,GAAGO,OAAO;IAAC;IAC7C,MAAME,OAAAA,WAAAA,GAAOC,CAAAA,GAAAA,OAAAA,IAAI,EAAC,IAAMF,KAAKP,MAAM,GAAGU,IAAI,CAACf;IAC3C,MAAMgB,UAAUJ,KAAKJ,OAAO;IAE5B,SAASS,kBAAkBC,KAAU;QACnC,MAAMC,kBAAkBH,UAAAA,WAAAA,GACtB,CAAA,GAAA,YAAA,GAAA,EAACA,SAAAA;YAAQI,WAAW;YAAMC,WAAW;YAAMC,OAAO;aAChD;QAEJ,kFAAkF;QAClF,MAAMC,sBAAsB,CAACX,KAAKH,GAAG,IAAI,CAAC,CAACG,KAAKJ,OAAO;QACvD,MAAMgB,OAAOD,sBAAsBE,OAAAA,QAAQ,GAAGC,OAAAA,QAAQ;QACtD,MAAMC,YAAYJ,sBAAsB;YAAEK,UAAUT;QAAgB,IAAI,CAAC;QACzE,MAAMU,WAAWjB,KAAKH,GAAG,GAAA,WAAA,GACvB,CAAA,GAAA,YAAA,IAAA,EAAA,YAAA,QAAA,EAAA;;gBAEG,OAAOqB,WAAW,qBAAA,WAAA,GACjB,CAAA,GAAA,YAAA,GAAA,EAACC,eAAAA,aAAa,EAAA;oBAACC,WAAWpB,KAAKqB,OAAO;qBACpC;8BACJ,CAAA,GAAA,YAAA,GAAA,EAACpB,MAAAA;oBAAM,GAAGK,KAAK;;;2BAGjB,CAAA,GAAA,YAAA,GAAA,EAACgB,qBAAAA,YAAY,EAAA;YAACC,QAAO;sBACnB,WAAA,GAAA,CAAA,GAAA,YAAA,GAAA,EAACtB,MAAAA;gBAAM,GAAGK,KAAK;;;QAInB,OAAA,WAAA,GAAO,CAAA,GAAA,YAAA,GAAA,EAACM,MAAAA;YAAM,GAAGG,SAAS;sBAAGE;;IAC/B;IAEAZ,kBAAkBmB,WAAW,GAAG;IAEhC,OAAOnB;AACT;MAEA,WAAeP","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1607, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/hosting%20admin/node_modules/next/src/shared/lib/app-dynamic.tsx"],"sourcesContent":["import type React from 'react'\nimport type { JSX } from 'react'\nimport Loadable from './lazy-dynamic/loadable'\n\nimport type {\n  LoadableGeneratedOptions,\n  DynamicOptionsLoadingProps,\n  Loader,\n  LoaderComponent,\n} from './lazy-dynamic/types'\n\nexport {\n  type LoadableGeneratedOptions,\n  type DynamicOptionsLoadingProps,\n  type Loader,\n  type LoaderComponent,\n}\n\nexport type DynamicOptions<P = {}> = LoadableGeneratedOptions & {\n  loading?: () => JSX.Element | null\n  loader?: Loader<P>\n  loadableGenerated?: LoadableGeneratedOptions\n  modules?: string[]\n  ssr?: boolean\n}\n\nexport type LoadableOptions<P = {}> = DynamicOptions<P>\n\nexport type LoadableFn<P = {}> = (\n  opts: LoadableOptions<P>\n) => React.ComponentType<P>\n\nexport type LoadableComponent<P = {}> = React.ComponentType<P>\n\nexport default function dynamic<P = {}>(\n  dynamicOptions: DynamicOptions<P> | Loader<P>,\n  options?: DynamicOptions<P>\n): React.ComponentType<P> {\n  const loadableOptions: LoadableOptions<P> = {}\n\n  if (typeof dynamicOptions === 'function') {\n    loadableOptions.loader = dynamicOptions\n  }\n\n  const mergedOptions = {\n    ...loadableOptions,\n    ...options,\n  }\n\n  return Loadable({\n    ...mergedOptions,\n    modules: mergedOptions.loadableGenerated?.modules,\n  })\n}\n"],"names":["dynamic","dynamicOptions","options","mergedOptions","loadableOptions","loader","Loadable","modules","loadableGenerated"],"mappings":";;;+BAkCA,WAAA;;;eAAwBA;;;;mEAhCH;AAgCN,SAASA,QACtBC,cAA6C,EAC7CC,OAA2B;QAehBC;IAbX,MAAMC,kBAAsC,CAAC;IAE7C,IAAI,OAAOH,mBAAmB,YAAY;QACxCG,gBAAgBC,MAAM,GAAGJ;IAC3B;IAEA,MAAME,gBAAgB;QACpB,GAAGC,eAAe;QAClB,GAAGF,OAAO;IACZ;IAEA,OAAOI,CAAAA,GAAAA,UAAAA,OAAQ,EAAC;QACd,GAAGH,aAAa;QAChBI,OAAO,EAAA,CAAEJ,mCAAAA,cAAcK,iBAAiB,KAAA,OAAA,KAAA,IAA/BL,iCAAiCI,OAAO;IACnD;AACF","ignoreList":[0],"debugId":null}}]
}