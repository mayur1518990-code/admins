{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/doc/apps/admin-app/src/lib/firebase-admin.ts"],"sourcesContent":["import { initializeApp, getApps, cert } from 'firebase-admin/app';\r\nimport { getAuth } from 'firebase-admin/auth';\r\nimport { getFirestore } from 'firebase-admin/firestore';\r\nimport { getStorage } from 'firebase-admin/storage';\r\n\r\n// Initialize Firebase Admin\r\nconst privateKey = process.env.FIREBASE_PRIVATE_KEY?.replace(/^\"|\"$/g, '') || '';\r\n\r\nconst firebaseAdminConfig = {\r\n  credential: cert({\r\n    projectId: process.env.FIREBASE_PROJECT_ID,\r\n    clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\r\n    privateKey: privateKey,\r\n  }),\r\n};\r\n\r\n// Initialize Firebase Admin\r\nconst adminApp = getApps().length === 0 ? initializeApp(firebaseAdminConfig) : getApps()[0];\r\n\r\n// Initialize Firebase Admin services\r\nexport const adminAuth = getAuth(adminApp);\r\nexport const adminDb = getFirestore(adminApp);\r\nexport const adminStorage = getStorage(adminApp);\r\n\r\nexport default adminApp;\r\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;AAEA,4BAA4B;AAC5B,MAAM,aAAa,QAAQ,GAAG,CAAC,oBAAoB,EAAE,QAAQ,UAAU,OAAO;AAE9E,MAAM,sBAAsB;IAC1B,YAAY,IAAA,wJAAI,EAAC;QACf,WAAW,QAAQ,GAAG,CAAC,mBAAmB;QAC1C,aAAa,QAAQ,GAAG,CAAC,qBAAqB;QAC9C,YAAY;IACd;AACF;AAEA,4BAA4B;AAC5B,MAAM,WAAW,IAAA,2JAAO,IAAG,MAAM,KAAK,IAAI,IAAA,iKAAa,EAAC,uBAAuB,IAAA,2JAAO,GAAE,CAAC,EAAE;AAGpF,MAAM,YAAY,IAAA,6JAAO,EAAC;AAC1B,MAAM,UAAU,IAAA,4KAAY,EAAC;AAC7B,MAAM,eAAe,IAAA,sKAAU,EAAC;uCAExB","debugId":null}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/doc/apps/admin-app/src/lib/server-cache.ts"],"sourcesContent":["type CacheEntry<T> = { data: T; expiresAt: number };\r\n\r\nclass SimpleLRUCache {\r\n  private store = new Map<string, CacheEntry<any>>();\r\n  private order: string[] = [];\r\n  constructor(private maxEntries: number = 200) {}\r\n\r\n  get<T>(key: string): T | undefined {\r\n    const entry = this.store.get(key);\r\n    if (!entry) return undefined;\r\n    if (Date.now() > entry.expiresAt) {\r\n      this.delete(key);\r\n      return undefined;\r\n    }\r\n    // touch\r\n    this.order = this.order.filter(k => k !== key);\r\n    this.order.push(key);\r\n    return entry.data as T;\r\n    }\r\n\r\n  set<T>(key: string, value: T, ttlMs: number): void {\r\n    const expiresAt = Date.now() + ttlMs;\r\n    this.store.set(key, { data: value, expiresAt });\r\n    this.order = this.order.filter(k => k !== key);\r\n    this.order.push(key);\r\n    // evict\r\n    while (this.order.length > this.maxEntries) {\r\n      const oldest = this.order.shift();\r\n      if (oldest) this.store.delete(oldest);\r\n    }\r\n  }\r\n\r\n  delete(key: string): void {\r\n    this.store.delete(key);\r\n    this.order = this.order.filter(k => k !== key);\r\n  }\r\n\r\n  deleteByPrefix(prefix: string): void {\r\n    for (const key of Array.from(this.store.keys())) {\r\n      if (key.startsWith(prefix)) this.delete(key);\r\n    }\r\n  }\r\n}\r\n\r\nexport const serverCache = new SimpleLRUCache(300);\r\n\r\nexport function makeKey(resource: string, parts: Array<string | number | boolean | null | undefined> = []) {\r\n  return `admin:${resource}:${parts.filter(v => v !== undefined && v !== null).join(':')}`;\r\n}\r\n\r\n\r\n"],"names":[],"mappings":";;;;;;AAEA,MAAM;;IACI,MAA2C;IAC3C,MAAqB;IAC7B,YAAY,AAAQ,aAAqB,GAAG,CAAE;aAA1B,aAAA;aAFZ,QAAQ,IAAI;aACZ,QAAkB,EAAE;IACmB;IAE/C,IAAO,GAAW,EAAiB;QACjC,MAAM,QAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAC7B,IAAI,CAAC,OAAO,OAAO;QACnB,IAAI,KAAK,GAAG,KAAK,MAAM,SAAS,EAAE;YAChC,IAAI,CAAC,MAAM,CAAC;YACZ,OAAO;QACT;QACA,QAAQ;QACR,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA,IAAK,MAAM;QAC1C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAChB,OAAO,MAAM,IAAI;IACjB;IAEF,IAAO,GAAW,EAAE,KAAQ,EAAE,KAAa,EAAQ;QACjD,MAAM,YAAY,KAAK,GAAG,KAAK;QAC/B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK;YAAE,MAAM;YAAO;QAAU;QAC7C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA,IAAK,MAAM;QAC1C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAChB,QAAQ;QACR,MAAO,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAE;YAC1C,MAAM,SAAS,IAAI,CAAC,KAAK,CAAC,KAAK;YAC/B,IAAI,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAChC;IACF;IAEA,OAAO,GAAW,EAAQ;QACxB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA,IAAK,MAAM;IAC5C;IAEA,eAAe,MAAc,EAAQ;QACnC,KAAK,MAAM,OAAO,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAK;YAC/C,IAAI,IAAI,UAAU,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC;QAC1C;IACF;AACF;AAEO,MAAM,cAAc,IAAI,eAAe;AAEvC,SAAS,QAAQ,QAAgB,EAAE,QAA6D,EAAE;IACvG,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC,EAAE,MAAM,MAAM,CAAC,CAAA,IAAK,MAAM,aAAa,MAAM,MAAM,IAAI,CAAC,MAAM;AAC1F","debugId":null}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/doc/apps/admin-app/src/lib/admin-auth.ts"],"sourcesContent":["import { NextRequest } from \"next/server\";\nimport { cookies } from \"next/headers\";\nimport { adminAuth, adminDb } from \"./firebase-admin\";\n\n// Admin authentication helper that verifies against admins collection\nexport async function verifyAdminAuth() {\n  try {\n    const cookieStore = await cookies();\n    const token = cookieStore.get('admin-token')?.value;\n    \n    // For development, we'll allow access with a simple token check\n    if (token === 'dev_admin_token') {\n      return { \n        adminId: \"dev_admin\", \n        name: \"Development Admin\",\n        email: \"admin@docuploaer.com\",\n        role: \"admin\"\n      };\n    }\n\n    if (!token) {\n      throw new Error('No admin authentication token found');\n    }\n\n    // Verify the token with Firebase Admin\n    const decodedToken = await adminAuth.verifyIdToken(token);\n    \n    // Check if this is a custom token with admin role\n    if (decodedToken.role === 'admin') {\n      return {\n        adminId: decodedToken.adminId || decodedToken.uid,\n        name: decodedToken.name || 'Admin',\n        email: decodedToken.email || 'admin@example.com',\n        role: \"admin\"\n      };\n    }\n    \n    // Get admin data from admins collection\n    const adminDoc = await adminDb.collection('admins').doc(decodedToken.uid).get();\n    \n    if (!adminDoc.exists) {\n      throw new Error('Admin not found in database');\n    }\n\n    const adminData = adminDoc.data();\n    \n    if (!adminData?.isActive) {\n      throw new Error('Admin account is deactivated');\n    }\n\n    return {\n      adminId: decodedToken.uid,\n      name: adminData.name,\n      email: adminData.email,\n      role: \"admin\"\n    };\n  } catch (error) {\n    // For development, return default admin even on error\n    return { \n      adminId: \"dev_admin\", \n      name: \"Development Admin\",\n      email: \"admin@docuploaer.com\",\n      role: \"admin\"\n    };\n  }\n}\n\n// Helper function to get query parameters\nexport function getQueryParams(request: NextRequest) {\n  const { searchParams } = new URL(request.url);\n  return {\n    filter: searchParams.get('filter') || 'all',\n    dateFilter: searchParams.get('dateFilter') || 'all',\n    search: searchParams.get('search') || '',\n    limit: parseInt(searchParams.get('limit') || '50'),\n    offset: parseInt(searchParams.get('offset') || '0'),\n    status: searchParams.get('status'),\n    userId: searchParams.get('userId'),\n    fileId: searchParams.get('fileId'),\n    startDate: searchParams.get('startDate'),\n    endDate: searchParams.get('endDate')\n  };\n}\n"],"names":[],"mappings":";;;;;;AACA;AACA;;;;;;;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,cAAc,MAAM,IAAA,4IAAO;QACjC,MAAM,QAAQ,YAAY,GAAG,CAAC,gBAAgB;QAE9C,gEAAgE;QAChE,IAAI,UAAU,mBAAmB;YAC/B,OAAO;gBACL,SAAS;gBACT,MAAM;gBACN,OAAO;gBACP,MAAM;YACR;QACF;QAEA,IAAI,CAAC,OAAO;YACV,MAAM,IAAI,MAAM;QAClB;QAEA,uCAAuC;QACvC,MAAM,eAAe,MAAM,sKAAS,CAAC,aAAa,CAAC;QAEnD,kDAAkD;QAClD,IAAI,aAAa,IAAI,KAAK,SAAS;YACjC,OAAO;gBACL,SAAS,aAAa,OAAO,IAAI,aAAa,GAAG;gBACjD,MAAM,aAAa,IAAI,IAAI;gBAC3B,OAAO,aAAa,KAAK,IAAI;gBAC7B,MAAM;YACR;QACF;QAEA,wCAAwC;QACxC,MAAM,WAAW,MAAM,oKAAO,CAAC,UAAU,CAAC,UAAU,GAAG,CAAC,aAAa,GAAG,EAAE,GAAG;QAE7E,IAAI,CAAC,SAAS,MAAM,EAAE;YACpB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,YAAY,SAAS,IAAI;QAE/B,IAAI,CAAC,WAAW,UAAU;YACxB,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO;YACL,SAAS,aAAa,GAAG;YACzB,MAAM,UAAU,IAAI;YACpB,OAAO,UAAU,KAAK;YACtB,MAAM;QACR;IACF,EAAE,OAAO,OAAO;QACd,sDAAsD;QACtD,OAAO;YACL,SAAS;YACT,MAAM;YACN,OAAO;YACP,MAAM;QACR;IACF;AACF;AAGO,SAAS,eAAe,OAAoB;IACjD,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;IAC5C,OAAO;QACL,QAAQ,aAAa,GAAG,CAAC,aAAa;QACtC,YAAY,aAAa,GAAG,CAAC,iBAAiB;QAC9C,QAAQ,aAAa,GAAG,CAAC,aAAa;QACtC,OAAO,SAAS,aAAa,GAAG,CAAC,YAAY;QAC7C,QAAQ,SAAS,aAAa,GAAG,CAAC,aAAa;QAC/C,QAAQ,aAAa,GAAG,CAAC;QACzB,QAAQ,aAAa,GAAG,CAAC;QACzB,QAAQ,aAAa,GAAG,CAAC;QACzB,WAAW,aAAa,GAAG,CAAC;QAC5B,SAAS,aAAa,GAAG,CAAC;IAC5B;AACF","debugId":null}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/doc/apps/admin-app/src/app/api/admin/logs/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { adminDb } from '@/lib/firebase-admin';\nimport { serverCache, makeKey } from '@/lib/server-cache';\nimport { verifyAdminAuth } from '@/lib/admin-auth';\n\nexport async function GET(request: NextRequest) {\n  try {\n    // Verify admin authentication\n    const admin = await verifyAdminAuth();\n    if (!admin) {\n      return NextResponse.json({ success: false, error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const { searchParams } = new URL(request.url);\n    const page = parseInt(searchParams.get('page') || '1');\n    const limit = parseInt(searchParams.get('limit') || '25');\n    const search = searchParams.get('search') || '';\n    const action = searchParams.get('action') || 'all';\n    const dateFrom = searchParams.get('dateFrom') || '';\n    const dateTo = searchParams.get('dateTo') || '';\n\n    const cacheKey = makeKey('logs', ['list', page, limit, action || 'all', search || '', dateFrom || '', dateTo || '']);\n    const cached = serverCache.get<any>(cacheKey);\n    if (cached) return NextResponse.json(cached);\n\n    const logsSnapshot = await adminDb.collection('logs').get();\n    \n    // Filter logs by criteria\n    let logs = logsSnapshot.docs\n      .map(doc => ({ id: doc.id, ...doc.data() }))\n      .sort((a, b) => {\n        const aTime = a.timestamp?.toDate?.() || new Date(0);\n        const bTime = b.timestamp?.toDate?.() || new Date(0);\n        return bTime.getTime() - aTime.getTime();\n      });\n\n    // Apply action filter\n    if (action !== 'all') {\n      logs = logs.filter(log => log.action === action);\n    }\n\n    // Apply date range filter\n    if (dateFrom) {\n      const fromDate = new Date(dateFrom);\n      logs = logs.filter(log => {\n        const logDate = log.timestamp?.toDate?.() || new Date(0);\n        return logDate >= fromDate;\n      });\n    }\n\n    if (dateTo) {\n      const toDate = new Date(dateTo);\n      logs = logs.filter(log => {\n        const logDate = log.timestamp?.toDate?.() || new Date(0);\n        return logDate <= toDate;\n      });\n    }\n\n    // Apply search filter\n    if (search) {\n      const searchLower = search.toLowerCase();\n      logs = logs.filter(log => \n        log.action?.toLowerCase().includes(searchLower) ||\n        log.adminName?.toLowerCase().includes(searchLower) ||\n        log.targetUserId?.toLowerCase().includes(searchLower) ||\n        JSON.stringify(log.details || {}).toLowerCase().includes(searchLower)\n      );\n    }\n\n    // Apply pagination\n    const totalLogs = logs.length;\n    const startIndex = (Number(page) - 1) * Number(limit);\n    const endIndex = startIndex + Number(limit);\n    const paginatedLogs = logs.slice(startIndex, endIndex);\n\n    // Format logs for response\n    const formattedLogs = paginatedLogs.map(log => ({\n      id: log.id,\n      action: log.action || 'unknown',\n      adminId: log.adminId || 'system',\n      adminName: log.adminName || 'System',\n      targetUserId: log.targetUserId || null,\n      details: log.details || {},\n      timestamp: log.timestamp?.toDate?.() || new Date(),\n      createdAt: log.timestamp?.toDate?.() || new Date()\n    }));\n\n    const payload = {\n      success: true,\n      logs: formattedLogs,\n      pagination: {\n        page: Number(page),\n        limit: Number(limit),\n        total: totalLogs,\n        pages: Math.ceil(totalLogs / Number(limit))\n      }\n    };\n    serverCache.set(cacheKey, payload, 60_000);\n    return NextResponse.json(payload);\n\n  } catch (error: any) {\n    console.error('Error fetching logs:', error);\n    return NextResponse.json(\n      { success: false, error: 'Failed to fetch logs' },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    // Verify admin authentication\n    const admin = await verifyAdminAuth();\n    if (!admin) {\n      return NextResponse.json({ success: false, error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const { action, targetUserId, details } = await request.json();\n\n    if (!action) {\n      return NextResponse.json({ success: false, error: 'Action is required' }, { status: 400 });\n    }\n\n    // Create log entry\n    const logData = {\n      action,\n      adminId: admin.adminId,\n      adminName: admin.name,\n      targetUserId: targetUserId || null,\n      details: details || {},\n      timestamp: new Date(),\n      createdAt: new Date()\n    };\n\n    const docRef = await adminDb.collection('logs').add(logData);\n    serverCache.deleteByPrefix(makeKey('logs'));\n\n    return NextResponse.json({\n      success: true,\n      message: 'Log created successfully',\n      data: {\n        logId: docRef.id,\n        log: {\n          id: docRef.id,\n          ...logData\n        }\n      }\n    });\n\n  } catch (error: any) {\n    console.error('Error creating log:', error);\n    return NextResponse.json(\n      { success: false, error: 'Failed to create log' },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,8BAA8B;QAC9B,MAAM,QAAQ,MAAM,IAAA,wKAAe;QACnC,IAAI,CAAC,OAAO;YACV,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAO,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpF;QAEA,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,OAAO,SAAS,aAAa,GAAG,CAAC,WAAW;QAClD,MAAM,QAAQ,SAAS,aAAa,GAAG,CAAC,YAAY;QACpD,MAAM,SAAS,aAAa,GAAG,CAAC,aAAa;QAC7C,MAAM,SAAS,aAAa,GAAG,CAAC,aAAa;QAC7C,MAAM,WAAW,aAAa,GAAG,CAAC,eAAe;QACjD,MAAM,SAAS,aAAa,GAAG,CAAC,aAAa;QAE7C,MAAM,WAAW,IAAA,kKAAO,EAAC,QAAQ;YAAC;YAAQ;YAAM;YAAO,UAAU;YAAO,UAAU;YAAI,YAAY;YAAI,UAAU;SAAG;QACnH,MAAM,SAAS,sKAAW,CAAC,GAAG,CAAM;QACpC,IAAI,QAAQ,OAAO,gJAAY,CAAC,IAAI,CAAC;QAErC,MAAM,eAAe,MAAM,oKAAO,CAAC,UAAU,CAAC,QAAQ,GAAG;QAEzD,0BAA0B;QAC1B,IAAI,OAAO,aAAa,IAAI,CACzB,GAAG,CAAC,CAAA,MAAO,CAAC;gBAAE,IAAI,IAAI,EAAE;gBAAE,GAAG,IAAI,IAAI,EAAE;YAAC,CAAC,GACzC,IAAI,CAAC,CAAC,GAAG;YACR,MAAM,QAAQ,EAAE,SAAS,EAAE,cAAc,IAAI,KAAK;YAClD,MAAM,QAAQ,EAAE,SAAS,EAAE,cAAc,IAAI,KAAK;YAClD,OAAO,MAAM,OAAO,KAAK,MAAM,OAAO;QACxC;QAEF,sBAAsB;QACtB,IAAI,WAAW,OAAO;YACpB,OAAO,KAAK,MAAM,CAAC,CAAA,MAAO,IAAI,MAAM,KAAK;QAC3C;QAEA,0BAA0B;QAC1B,IAAI,UAAU;YACZ,MAAM,WAAW,IAAI,KAAK;YAC1B,OAAO,KAAK,MAAM,CAAC,CAAA;gBACjB,MAAM,UAAU,IAAI,SAAS,EAAE,cAAc,IAAI,KAAK;gBACtD,OAAO,WAAW;YACpB;QACF;QAEA,IAAI,QAAQ;YACV,MAAM,SAAS,IAAI,KAAK;YACxB,OAAO,KAAK,MAAM,CAAC,CAAA;gBACjB,MAAM,UAAU,IAAI,SAAS,EAAE,cAAc,IAAI,KAAK;gBACtD,OAAO,WAAW;YACpB;QACF;QAEA,sBAAsB;QACtB,IAAI,QAAQ;YACV,MAAM,cAAc,OAAO,WAAW;YACtC,OAAO,KAAK,MAAM,CAAC,CAAA,MACjB,IAAI,MAAM,EAAE,cAAc,SAAS,gBACnC,IAAI,SAAS,EAAE,cAAc,SAAS,gBACtC,IAAI,YAAY,EAAE,cAAc,SAAS,gBACzC,KAAK,SAAS,CAAC,IAAI,OAAO,IAAI,CAAC,GAAG,WAAW,GAAG,QAAQ,CAAC;QAE7D;QAEA,mBAAmB;QACnB,MAAM,YAAY,KAAK,MAAM;QAC7B,MAAM,aAAa,CAAC,OAAO,QAAQ,CAAC,IAAI,OAAO;QAC/C,MAAM,WAAW,aAAa,OAAO;QACrC,MAAM,gBAAgB,KAAK,KAAK,CAAC,YAAY;QAE7C,2BAA2B;QAC3B,MAAM,gBAAgB,cAAc,GAAG,CAAC,CAAA,MAAO,CAAC;gBAC9C,IAAI,IAAI,EAAE;gBACV,QAAQ,IAAI,MAAM,IAAI;gBACtB,SAAS,IAAI,OAAO,IAAI;gBACxB,WAAW,IAAI,SAAS,IAAI;gBAC5B,cAAc,IAAI,YAAY,IAAI;gBAClC,SAAS,IAAI,OAAO,IAAI,CAAC;gBACzB,WAAW,IAAI,SAAS,EAAE,cAAc,IAAI;gBAC5C,WAAW,IAAI,SAAS,EAAE,cAAc,IAAI;YAC9C,CAAC;QAED,MAAM,UAAU;YACd,SAAS;YACT,MAAM;YACN,YAAY;gBACV,MAAM,OAAO;gBACb,OAAO,OAAO;gBACd,OAAO;gBACP,OAAO,KAAK,IAAI,CAAC,YAAY,OAAO;YACtC;QACF;QACA,sKAAW,CAAC,GAAG,CAAC,UAAU,SAAS;QACnC,OAAO,gJAAY,CAAC,IAAI,CAAC;IAE3B,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,OAAO;QAAuB,GAChD;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,8BAA8B;QAC9B,MAAM,QAAQ,MAAM,IAAA,wKAAe;QACnC,IAAI,CAAC,OAAO;YACV,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAO,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpF;QAEA,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,MAAM,QAAQ,IAAI;QAE5D,IAAI,CAAC,QAAQ;YACX,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAO,OAAO;YAAqB,GAAG;gBAAE,QAAQ;YAAI;QAC1F;QAEA,mBAAmB;QACnB,MAAM,UAAU;YACd;YACA,SAAS,MAAM,OAAO;YACtB,WAAW,MAAM,IAAI;YACrB,cAAc,gBAAgB;YAC9B,SAAS,WAAW,CAAC;YACrB,WAAW,IAAI;YACf,WAAW,IAAI;QACjB;QAEA,MAAM,SAAS,MAAM,oKAAO,CAAC,UAAU,CAAC,QAAQ,GAAG,CAAC;QACpD,sKAAW,CAAC,cAAc,CAAC,IAAA,kKAAO,EAAC;QAEnC,OAAO,gJAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,SAAS;YACT,MAAM;gBACJ,OAAO,OAAO,EAAE;gBAChB,KAAK;oBACH,IAAI,OAAO,EAAE;oBACb,GAAG,OAAO;gBACZ;YACF;QACF;IAEF,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,OAAO;QAAuB,GAChD;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}