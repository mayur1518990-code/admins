// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin/agents" | "/admin/assign" | "/admin/files" | "/admin/logs" | "/admin/settings" | "/admin/transactions" | "/admin/users" | "/agent" | "/agent/files/[id]" | "/agent/login" | "/agent/reply" | "/dashboard" | "/debug" | "/test"
type AppRouteHandlerRoutes = "/api/admin" | "/api/admin/agents" | "/api/admin/assign" | "/api/admin/auth" | "/api/admin/auto-assign" | "/api/admin/background-assignment" | "/api/admin/create-test-file" | "/api/admin/dashboard" | "/api/admin/files" | "/api/admin/fix-admin-password" | "/api/admin/fix-password" | "/api/admin/login" | "/api/admin/logout" | "/api/admin/logs" | "/api/admin/monitor-assignments" | "/api/admin/test-assignment" | "/api/admin/test-auto-assign" | "/api/admin/transactions" | "/api/admin/users" | "/api/admin/users/reset-password" | "/api/admin/users/update-password" | "/api/agent/files" | "/api/agent/files/[fileId]/download" | "/api/agent/files/[fileId]/status" | "/api/agent/files/[fileId]/upload" | "/api/agent/login" | "/api/agent/logout" | "/api/agent/storage-test" | "/api/agents/auth" | "/api/agents/dashboard" | "/api/agents/files" | "/api/agents/respond" | "/api/auth" | "/api/files" | "/api/migrate/files" | "/api/replies"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin/agents": {}
  "/admin/assign": {}
  "/admin/files": {}
  "/admin/logs": {}
  "/admin/settings": {}
  "/admin/transactions": {}
  "/admin/users": {}
  "/agent": {}
  "/agent/files/[id]": { "id": string; }
  "/agent/login": {}
  "/agent/reply": {}
  "/api/admin": {}
  "/api/admin/agents": {}
  "/api/admin/assign": {}
  "/api/admin/auth": {}
  "/api/admin/auto-assign": {}
  "/api/admin/background-assignment": {}
  "/api/admin/create-test-file": {}
  "/api/admin/dashboard": {}
  "/api/admin/files": {}
  "/api/admin/fix-admin-password": {}
  "/api/admin/fix-password": {}
  "/api/admin/login": {}
  "/api/admin/logout": {}
  "/api/admin/logs": {}
  "/api/admin/monitor-assignments": {}
  "/api/admin/test-assignment": {}
  "/api/admin/test-auto-assign": {}
  "/api/admin/transactions": {}
  "/api/admin/users": {}
  "/api/admin/users/reset-password": {}
  "/api/admin/users/update-password": {}
  "/api/agent/files": {}
  "/api/agent/files/[fileId]/download": { "fileId": string; }
  "/api/agent/files/[fileId]/status": { "fileId": string; }
  "/api/agent/files/[fileId]/upload": { "fileId": string; }
  "/api/agent/login": {}
  "/api/agent/logout": {}
  "/api/agent/storage-test": {}
  "/api/agents/auth": {}
  "/api/agents/dashboard": {}
  "/api/agents/files": {}
  "/api/agents/respond": {}
  "/api/auth": {}
  "/api/files": {}
  "/api/migrate/files": {}
  "/api/replies": {}
  "/dashboard": {}
  "/debug": {}
  "/test": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
