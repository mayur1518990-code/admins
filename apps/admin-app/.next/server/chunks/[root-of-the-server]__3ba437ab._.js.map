{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/doc/apps/admin-app/src/lib/firebase-admin.ts"],"sourcesContent":["import { initializeApp, getApps, cert } from 'firebase-admin/app';\r\nimport { getAuth } from 'firebase-admin/auth';\r\nimport { getFirestore } from 'firebase-admin/firestore';\r\nimport { getStorage } from 'firebase-admin/storage';\r\n\r\n// Initialize Firebase Admin\r\nconst privateKey = process.env.FIREBASE_PRIVATE_KEY?.replace(/^\"|\"$/g, '') || '';\r\n\r\nconst firebaseAdminConfig = {\r\n  credential: cert({\r\n    projectId: process.env.FIREBASE_PROJECT_ID,\r\n    clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\r\n    privateKey: privateKey,\r\n  }),\r\n};\r\n\r\n// Initialize Firebase Admin\r\nconst adminApp = getApps().length === 0 ? initializeApp(firebaseAdminConfig) : getApps()[0];\r\n\r\n// Initialize Firebase Admin services\r\nexport const adminAuth = getAuth(adminApp);\r\nexport const adminDb = getFirestore(adminApp);\r\nexport const adminStorage = getStorage(adminApp);\r\n\r\nexport default adminApp;\r\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;AAEA,4BAA4B;AAC5B,MAAM,aAAa,QAAQ,GAAG,CAAC,oBAAoB,EAAE,QAAQ,UAAU,OAAO;AAE9E,MAAM,sBAAsB;IAC1B,YAAY,IAAA,wJAAI,EAAC;QACf,WAAW,QAAQ,GAAG,CAAC,mBAAmB;QAC1C,aAAa,QAAQ,GAAG,CAAC,qBAAqB;QAC9C,YAAY;IACd;AACF;AAEA,4BAA4B;AAC5B,MAAM,WAAW,IAAA,2JAAO,IAAG,MAAM,KAAK,IAAI,IAAA,iKAAa,EAAC,uBAAuB,IAAA,2JAAO,GAAE,CAAC,EAAE;AAGpF,MAAM,YAAY,IAAA,6JAAO,EAAC;AAC1B,MAAM,UAAU,IAAA,4KAAY,EAAC;AAC7B,MAAM,eAAe,IAAA,sKAAU,EAAC;uCAExB","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/doc/apps/admin-app/src/lib/get-default-agent.ts"],"sourcesContent":["import { adminDb } from './firebase-admin';\r\n\r\n/**\r\n * Get the first active agent from the database\r\n * This is used for development when we need to map to a real agent\r\n */\r\nexport async function getDefaultAgent() {\r\n  try {\r\n    const agentsSnapshot = await adminDb.collection('agents')\r\n      .where('isActive', '==', true)\r\n      .limit(1)\r\n      .get();\r\n\r\n    if (!agentsSnapshot.empty) {\r\n      const agentDoc = agentsSnapshot.docs[0];\r\n      const agentData = agentDoc.data();\r\n      \r\n      return {\r\n        agentId: agentDoc.id,\r\n        name: agentData.name || 'Unknown Agent',\r\n        email: agentData.email || 'unknown@example.com',\r\n        role: 'agent'\r\n      };\r\n    }\r\n\r\n    // Fallback to hardcoded values if no agents found\r\n    return {\r\n      agentId: \"bim290LXmEf6N7IuTzKU7bv5XcG2\",\r\n      name: \"Sunny Atul Dhore\", \r\n      email: \"dhoresunny5648@gmail.com\",\r\n      role: \"agent\"\r\n    };\r\n  } catch (error) {\r\n    console.error('Error getting default agent:', error);\r\n    // Fallback to hardcoded values\r\n    return {\r\n      agentId: \"bim290LXmEf6N7IuTzKU7bv5XcG2\",\r\n      name: \"Sunny Atul Dhore\",\r\n      email: \"dhoresunny5648@gmail.com\", \r\n      role: \"agent\"\r\n    };\r\n  }\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AAAA;;;;;;AAMO,eAAe;IACpB,IAAI;QACF,MAAM,iBAAiB,MAAM,oKAAO,CAAC,UAAU,CAAC,UAC7C,KAAK,CAAC,YAAY,MAAM,MACxB,KAAK,CAAC,GACN,GAAG;QAEN,IAAI,CAAC,eAAe,KAAK,EAAE;YACzB,MAAM,WAAW,eAAe,IAAI,CAAC,EAAE;YACvC,MAAM,YAAY,SAAS,IAAI;YAE/B,OAAO;gBACL,SAAS,SAAS,EAAE;gBACpB,MAAM,UAAU,IAAI,IAAI;gBACxB,OAAO,UAAU,KAAK,IAAI;gBAC1B,MAAM;YACR;QACF;QAEA,kDAAkD;QAClD,OAAO;YACL,SAAS;YACT,MAAM;YACN,OAAO;YACP,MAAM;QACR;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,+BAA+B;QAC/B,OAAO;YACL,SAAS;YACT,MAAM;YACN,OAAO;YACP,MAAM;QACR;IACF;AACF","debugId":null}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/doc/apps/admin-app/src/lib/agent-auth.ts"],"sourcesContent":["import { NextRequest } from \"next/server\";\nimport { cookies } from \"next/headers\";\nimport { adminAuth, adminDb } from \"./firebase-admin\";\nimport { getDefaultAgent } from \"./get-default-agent\";\n\n// Agent authentication helper that verifies against agents collection\nexport async function verifyAgentAuth() {\n  try {\n    const cookieStore = await cookies();\n    const token = cookieStore.get('agent-token')?.value;\n    \n    // For development, we'll allow access with a simple token check\n    if (token === 'dev_agent_token') {\n      // Get the first active agent from the database\n      const defaultAgent = await getDefaultAgent();\n      return defaultAgent;\n    }\n\n    if (!token) {\n      throw new Error('No agent authentication token found');\n    }\n\n    // Verify the token with Firebase Admin\n    const decodedToken = await adminAuth.verifyIdToken(token);\n    \n    // Check if this is a custom token with agent role\n    if (decodedToken.role === 'agent') {\n      return {\n        agentId: decodedToken.agentId || decodedToken.uid,\n        name: decodedToken.name || 'Agent',\n        email: decodedToken.email || 'agent@example.com',\n        role: \"agent\"\n      };\n    }\n    \n    // Get agent data from agents collection\n    const agentDoc = await adminDb.collection('agents').doc(decodedToken.uid).get();\n    \n    if (!agentDoc.exists) {\n      throw new Error('Agent not found in database');\n    }\n\n    const agentData = agentDoc.data();\n    \n    if (!agentData?.isActive) {\n      throw new Error('Agent account is deactivated');\n    }\n\n    return {\n      agentId: decodedToken.uid,\n      name: agentData.name,\n      email: agentData.email,\n      role: \"agent\"\n    };\n  } catch (error) {\n    // For development, return default agent even on error\n    const defaultAgent = await getDefaultAgent();\n    return defaultAgent;\n  }\n}\n\n// Helper function to get query parameters\nexport function getQueryParams(request: NextRequest) {\n  const { searchParams } = new URL(request.url);\n  return {\n    filter: searchParams.get('filter') || 'all',\n    dateFilter: searchParams.get('dateFilter') || 'all',\n    search: searchParams.get('search') || '',\n    limit: parseInt(searchParams.get('limit') || '50'),\n    offset: parseInt(searchParams.get('offset') || '0'),\n    status: searchParams.get('status'),\n    userId: searchParams.get('userId'),\n    fileId: searchParams.get('fileId'),\n    startDate: searchParams.get('startDate'),\n    endDate: searchParams.get('endDate')\n  };\n}"],"names":[],"mappings":";;;;;;AACA;AACA;AACA;;;;;;;;;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,cAAc,MAAM,IAAA,4IAAO;QACjC,MAAM,QAAQ,YAAY,GAAG,CAAC,gBAAgB;QAE9C,gEAAgE;QAChE,IAAI,UAAU,mBAAmB;YAC/B,+CAA+C;YAC/C,MAAM,eAAe,MAAM,IAAA,kLAAe;YAC1C,OAAO;QACT;QAEA,IAAI,CAAC,OAAO;YACV,MAAM,IAAI,MAAM;QAClB;QAEA,uCAAuC;QACvC,MAAM,eAAe,MAAM,sKAAS,CAAC,aAAa,CAAC;QAEnD,kDAAkD;QAClD,IAAI,aAAa,IAAI,KAAK,SAAS;YACjC,OAAO;gBACL,SAAS,aAAa,OAAO,IAAI,aAAa,GAAG;gBACjD,MAAM,aAAa,IAAI,IAAI;gBAC3B,OAAO,aAAa,KAAK,IAAI;gBAC7B,MAAM;YACR;QACF;QAEA,wCAAwC;QACxC,MAAM,WAAW,MAAM,oKAAO,CAAC,UAAU,CAAC,UAAU,GAAG,CAAC,aAAa,GAAG,EAAE,GAAG;QAE7E,IAAI,CAAC,SAAS,MAAM,EAAE;YACpB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,YAAY,SAAS,IAAI;QAE/B,IAAI,CAAC,WAAW,UAAU;YACxB,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO;YACL,SAAS,aAAa,GAAG;YACzB,MAAM,UAAU,IAAI;YACpB,OAAO,UAAU,KAAK;YACtB,MAAM;QACR;IACF,EAAE,OAAO,OAAO;QACd,sDAAsD;QACtD,MAAM,eAAe,MAAM,IAAA,kLAAe;QAC1C,OAAO;IACT;AACF;AAGO,SAAS,eAAe,OAAoB;IACjD,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;IAC5C,OAAO;QACL,QAAQ,aAAa,GAAG,CAAC,aAAa;QACtC,YAAY,aAAa,GAAG,CAAC,iBAAiB;QAC9C,QAAQ,aAAa,GAAG,CAAC,aAAa;QACtC,OAAO,SAAS,aAAa,GAAG,CAAC,YAAY;QAC7C,QAAQ,SAAS,aAAa,GAAG,CAAC,aAAa;QAC/C,QAAQ,aAAa,GAAG,CAAC;QACzB,QAAQ,aAAa,GAAG,CAAC;QACzB,QAAQ,aAAa,GAAG,CAAC;QACzB,WAAW,aAAa,GAAG,CAAC;QAC5B,SAAS,aAAa,GAAG,CAAC;IAC5B;AACF","debugId":null}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/doc/apps/admin-app/src/lib/agent-utils.ts"],"sourcesContent":["import { adminDb } from './firebase-admin';\r\n\r\n/**\r\n * Normalize agent ID to handle different ID formats\r\n * This function tries to find the correct agent ID format\r\n */\r\nexport async function normalizeAgentId(agentId: string): Promise<string> {\r\n  try {\r\n    // First, try to find the agent by the provided ID\r\n    const agentDoc = await adminDb.collection('agents').doc(agentId).get();\r\n    if (agentDoc.exists) {\r\n      return agentId;\r\n    }\r\n\r\n    // If not found, try to find by email or name\r\n    const agentsSnapshot = await adminDb.collection('agents')\r\n      .where('email', '==', agentId)\r\n      .get();\r\n    \r\n    if (!agentsSnapshot.empty) {\r\n      return agentsSnapshot.docs[0].id;\r\n    }\r\n\r\n    // Try to find by name\r\n    const agentsByNameSnapshot = await adminDb.collection('agents')\r\n      .where('name', '==', agentId)\r\n      .get();\r\n    \r\n    if (!agentsByNameSnapshot.empty) {\r\n      return agentsByNameSnapshot.docs[0].id;\r\n    }\r\n\r\n    // Return original ID if nothing found\r\n    return agentId;\r\n  } catch (error) {\r\n    console.error('Error normalizing agent ID:', error);\r\n    return agentId;\r\n  }\r\n}\r\n\r\n/**\r\n * Get all possible agent IDs for a given agent\r\n * This helps debug assignment issues\r\n */\r\nexport async function getAllAgentIds(agentId: string): Promise<string[]> {\r\n  try {\r\n    const agentIds: string[] = [agentId];\r\n    \r\n    // Get agent document\r\n    const agentDoc = await adminDb.collection('agents').doc(agentId).get();\r\n    if (agentDoc.exists) {\r\n      const agentData = agentDoc.data();\r\n      \r\n      // Add email as potential ID\r\n      if (agentData?.email) {\r\n        agentIds.push(agentData.email);\r\n      }\r\n      \r\n      // Add name as potential ID\r\n      if (agentData?.name) {\r\n        agentIds.push(agentData.name);\r\n      }\r\n    }\r\n\r\n    return [...new Set(agentIds)]; // Remove duplicates\r\n  } catch (error) {\r\n    console.error('Error getting all agent IDs:', error);\r\n    return [agentId];\r\n  }\r\n}\r\n\r\n/**\r\n * Find files assigned to an agent using multiple possible ID formats\r\n */\r\nexport async function findAgentFiles(agentId: string) {\r\n  try {\r\n    const allAgentIds = await getAllAgentIds(agentId);\r\n    console.log(`[AGENT-UTILS] Searching for files with agent IDs:`, allAgentIds);\r\n    \r\n    const allFiles: any[] = [];\r\n    \r\n    for (const id of allAgentIds) {\r\n      // Try assignedAgentId field\r\n      const assignedFilesSnapshot = await adminDb.collection('files')\r\n        .where('assignedAgentId', '==', id)\r\n        .get();\r\n      \r\n      assignedFilesSnapshot.docs.forEach(doc => {\r\n        allFiles.push({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n          foundBy: 'assignedAgentId',\r\n          foundWithId: id\r\n        });\r\n      });\r\n      \r\n      // Try agentId field\r\n      const agentFilesSnapshot = await adminDb.collection('files')\r\n        .where('agentId', '==', id)\r\n        .get();\r\n      \r\n      agentFilesSnapshot.docs.forEach(doc => {\r\n        allFiles.push({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n          foundBy: 'agentId',\r\n          foundWithId: id\r\n        });\r\n      });\r\n    }\r\n    \r\n    // Remove duplicates based on file ID\r\n    const uniqueFiles = allFiles.filter((file, index, self) => \r\n      index === self.findIndex(f => f.id === file.id)\r\n    );\r\n    \r\n    console.log(`[AGENT-UTILS] Found ${uniqueFiles.length} unique files for agent ${agentId}`);\r\n    return uniqueFiles;\r\n  } catch (error) {\r\n    console.error('Error finding agent files:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;;;;AAAA;;;;;;AAMO,eAAe,iBAAiB,OAAe;IACpD,IAAI;QACF,kDAAkD;QAClD,MAAM,WAAW,MAAM,oKAAO,CAAC,UAAU,CAAC,UAAU,GAAG,CAAC,SAAS,GAAG;QACpE,IAAI,SAAS,MAAM,EAAE;YACnB,OAAO;QACT;QAEA,6CAA6C;QAC7C,MAAM,iBAAiB,MAAM,oKAAO,CAAC,UAAU,CAAC,UAC7C,KAAK,CAAC,SAAS,MAAM,SACrB,GAAG;QAEN,IAAI,CAAC,eAAe,KAAK,EAAE;YACzB,OAAO,eAAe,IAAI,CAAC,EAAE,CAAC,EAAE;QAClC;QAEA,sBAAsB;QACtB,MAAM,uBAAuB,MAAM,oKAAO,CAAC,UAAU,CAAC,UACnD,KAAK,CAAC,QAAQ,MAAM,SACpB,GAAG;QAEN,IAAI,CAAC,qBAAqB,KAAK,EAAE;YAC/B,OAAO,qBAAqB,IAAI,CAAC,EAAE,CAAC,EAAE;QACxC;QAEA,sCAAsC;QACtC,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO;IACT;AACF;AAMO,eAAe,eAAe,OAAe;IAClD,IAAI;QACF,MAAM,WAAqB;YAAC;SAAQ;QAEpC,qBAAqB;QACrB,MAAM,WAAW,MAAM,oKAAO,CAAC,UAAU,CAAC,UAAU,GAAG,CAAC,SAAS,GAAG;QACpE,IAAI,SAAS,MAAM,EAAE;YACnB,MAAM,YAAY,SAAS,IAAI;YAE/B,4BAA4B;YAC5B,IAAI,WAAW,OAAO;gBACpB,SAAS,IAAI,CAAC,UAAU,KAAK;YAC/B;YAEA,2BAA2B;YAC3B,IAAI,WAAW,MAAM;gBACnB,SAAS,IAAI,CAAC,UAAU,IAAI;YAC9B;QACF;QAEA,OAAO;eAAI,IAAI,IAAI;SAAU,EAAE,oBAAoB;IACrD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO;YAAC;SAAQ;IAClB;AACF;AAKO,eAAe,eAAe,OAAe;IAClD,IAAI;QACF,MAAM,cAAc,MAAM,eAAe;QACzC,QAAQ,GAAG,CAAC,CAAC,iDAAiD,CAAC,EAAE;QAEjE,MAAM,WAAkB,EAAE;QAE1B,KAAK,MAAM,MAAM,YAAa;YAC5B,4BAA4B;YAC5B,MAAM,wBAAwB,MAAM,oKAAO,CAAC,UAAU,CAAC,SACpD,KAAK,CAAC,mBAAmB,MAAM,IAC/B,GAAG;YAEN,sBAAsB,IAAI,CAAC,OAAO,CAAC,CAAA;gBACjC,SAAS,IAAI,CAAC;oBACZ,IAAI,IAAI,EAAE;oBACV,GAAG,IAAI,IAAI,EAAE;oBACb,SAAS;oBACT,aAAa;gBACf;YACF;YAEA,oBAAoB;YACpB,MAAM,qBAAqB,MAAM,oKAAO,CAAC,UAAU,CAAC,SACjD,KAAK,CAAC,WAAW,MAAM,IACvB,GAAG;YAEN,mBAAmB,IAAI,CAAC,OAAO,CAAC,CAAA;gBAC9B,SAAS,IAAI,CAAC;oBACZ,IAAI,IAAI,EAAE;oBACV,GAAG,IAAI,IAAI,EAAE;oBACb,SAAS;oBACT,aAAa;gBACf;YACF;QACF;QAEA,qCAAqC;QACrC,MAAM,cAAc,SAAS,MAAM,CAAC,CAAC,MAAM,OAAO,OAChD,UAAU,KAAK,SAAS,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,KAAK,EAAE;QAGhD,QAAQ,GAAG,CAAC,CAAC,oBAAoB,EAAE,YAAY,MAAM,CAAC,wBAAwB,EAAE,SAAS;QACzF,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,EAAE;IACX;AACF","debugId":null}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":["file:///D:/majalgav/doc/apps/admin-app/src/app/api/agent/files/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { adminDb } from '@/lib/firebase-admin';\nimport { verifyAgentAuth } from '@/lib/agent-auth';\nimport { findAgentFiles } from '@/lib/agent-utils';\n\nexport async function GET(request: NextRequest) {\n  try {\n    // Verify agent authentication\n    const agent = await verifyAgentAuth();\n    if (!agent) {\n      return NextResponse.json({ success: false, error: 'Unauthorized' }, { status: 401 });\n    }\n\n    // Use the utility function to find files with multiple ID formats\n    const agentFiles = await findAgentFiles(agent.agentId);\n\n    // Convert to the format expected by the rest of the function\n    const filesSnapshot = {\n      docs: agentFiles.map(file => ({\n        id: file.id,\n        data: () => file\n      }))\n    };\n\n    const files = await Promise.all(\n      filesSnapshot.docs.map(async (doc) => {\n        const fileData = doc.data();\n        \n        // Get user information\n        let userEmail = '';\n        let userPhone = '';\n        if (fileData.userId) {\n          try {\n            const userDoc = await adminDb.collection('users').doc(fileData.userId).get();\n            if (userDoc.exists) {\n              const userData = userDoc.data();\n              userEmail = userData?.email || '';\n              userPhone = userData?.phone || '';\n            }\n          } catch (error) {\n            // User data not found, continue without it\n          }\n        }\n\n        // Get completed file information if exists\n        let completedFile = null;\n        if (fileData.status === 'completed' && fileData.completedFileId) {\n          try {\n            const completedFileDoc = await adminDb.collection('completedFiles').doc(fileData.completedFileId).get();\n            if (completedFileDoc.exists) {\n              const completedData = completedFileDoc.data();\n              completedFile = {\n                filename: completedData?.filename || '',\n                originalName: completedData?.originalName || '',\n                size: completedData?.size || 0,\n                uploadedAt: completedData?.uploadedAt || ''\n              };\n            }\n          } catch (error) {\n            console.error('Error fetching completed file data:', error);\n          }\n        }\n\n        return {\n          id: doc.id,\n          originalName: fileData.originalName || '',\n          filename: fileData.filename || '',\n          size: fileData.size || 0,\n          mimeType: fileData.mimeType || '',\n          status: fileData.status || 'assigned',\n          uploadedAt: fileData.uploadedAt || '',\n          assignedAt: fileData.assignedAt || '',\n          userId: fileData.userId || '',\n          userEmail,\n          userPhone,\n          completedFile\n        };\n      })\n    );\n\n    return NextResponse.json({\n      success: true,\n      files\n    });\n\n  } catch (error: any) {\n    console.error('Error fetching agent files:', error);\n    return NextResponse.json(\n      { success: false, error: 'Failed to fetch files' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,8BAA8B;QAC9B,MAAM,QAAQ,MAAM,IAAA,wKAAe;QACnC,IAAI,CAAC,OAAO;YACV,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAO,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpF;QAEA,kEAAkE;QAClE,MAAM,aAAa,MAAM,IAAA,wKAAc,EAAC,MAAM,OAAO;QAErD,6DAA6D;QAC7D,MAAM,gBAAgB;YACpB,MAAM,WAAW,GAAG,CAAC,CAAA,OAAQ,CAAC;oBAC5B,IAAI,KAAK,EAAE;oBACX,MAAM,IAAM;gBACd,CAAC;QACH;QAEA,MAAM,QAAQ,MAAM,QAAQ,GAAG,CAC7B,cAAc,IAAI,CAAC,GAAG,CAAC,OAAO;YAC5B,MAAM,WAAW,IAAI,IAAI;YAEzB,uBAAuB;YACvB,IAAI,YAAY;YAChB,IAAI,YAAY;YAChB,IAAI,SAAS,MAAM,EAAE;gBACnB,IAAI;oBACF,MAAM,UAAU,MAAM,oKAAO,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC,SAAS,MAAM,EAAE,GAAG;oBAC1E,IAAI,QAAQ,MAAM,EAAE;wBAClB,MAAM,WAAW,QAAQ,IAAI;wBAC7B,YAAY,UAAU,SAAS;wBAC/B,YAAY,UAAU,SAAS;oBACjC;gBACF,EAAE,OAAO,OAAO;gBACd,2CAA2C;gBAC7C;YACF;YAEA,2CAA2C;YAC3C,IAAI,gBAAgB;YACpB,IAAI,SAAS,MAAM,KAAK,eAAe,SAAS,eAAe,EAAE;gBAC/D,IAAI;oBACF,MAAM,mBAAmB,MAAM,oKAAO,CAAC,UAAU,CAAC,kBAAkB,GAAG,CAAC,SAAS,eAAe,EAAE,GAAG;oBACrG,IAAI,iBAAiB,MAAM,EAAE;wBAC3B,MAAM,gBAAgB,iBAAiB,IAAI;wBAC3C,gBAAgB;4BACd,UAAU,eAAe,YAAY;4BACrC,cAAc,eAAe,gBAAgB;4BAC7C,MAAM,eAAe,QAAQ;4BAC7B,YAAY,eAAe,cAAc;wBAC3C;oBACF;gBACF,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,uCAAuC;gBACvD;YACF;YAEA,OAAO;gBACL,IAAI,IAAI,EAAE;gBACV,cAAc,SAAS,YAAY,IAAI;gBACvC,UAAU,SAAS,QAAQ,IAAI;gBAC/B,MAAM,SAAS,IAAI,IAAI;gBACvB,UAAU,SAAS,QAAQ,IAAI;gBAC/B,QAAQ,SAAS,MAAM,IAAI;gBAC3B,YAAY,SAAS,UAAU,IAAI;gBACnC,YAAY,SAAS,UAAU,IAAI;gBACnC,QAAQ,SAAS,MAAM,IAAI;gBAC3B;gBACA;gBACA;YACF;QACF;QAGF,OAAO,gJAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT;QACF;IAEF,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,OAAO;QAAwB,GACjD;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}